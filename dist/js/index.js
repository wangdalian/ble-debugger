!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r={genModuleLogger:function(e){return{debug:console.log.bind(this,`[${e}]`),info:console.log.bind(this,`[${e}]`),warn:console.log.bind(this,`[${e}]`),error:console.log.bind(this,`[${e}]`)}}};var i={BROADCASTS:"BROADCASTS",READ:"READ",WRITE_NO_RES:"WRITE NO RES",WRITE:"WRITE",NOTIFY:"NOTIFY",INDICATE:"INDICATE",AUTHEN:"AUTHEN",EXTENDED:"EXTENDED"},s={AC:"ac",AP:"ap"},a={ON:"on",OFF:"off"},o={INFO:"info",SUCCESS:"success",WARNING:"warning",ERROR:"error"},c={HEX:"hex",TEXT:"text"},u={SCAN:"scan",CONNECT:"connect",READ:"read",WRITE:"write",DISCONNECT:"disconnect"},l={CURL:"curl",NODEJS:"nodejs"},f={PUBLIC:"public",RANDOM:"random"};var d={http:{requestTimeout:1e3}};let p={http:{requestTimeout:5e3}};"production"===window.ENV&&(p=d);var h=p;var C={encode:function(e){return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,(function(e,t){return String.fromCharCode("0x"+t)})))},decode:function(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}};let S={devConf:{controlStyle:s.AP,serverURI:"http://192.168.5.100",baseURI:"http://192.168.5.100",acDevKey:"cassia",acDevSecret:"cassia",mac:"",filter_name:[],filter_mac:[],filter_rssi:-75,chip:0,access_token:""},devConfDisplayVars:{scanFilterNamesInputVisible:!1,scanFilterNamesInputValue:"",scanFilterMacsInputVisible:!1,scanFilterMacsInputValue:"",apiScanFilterNamesInputVisible:!1,apiScanFilterNamesInputValue:"",apiScanFilterMacsInputVisible:!1,apiScanFilterMacsInputValue:"",isScanning:!1,isNotifyOn:!1,isApiScanResultDisplayOn:!0,isApiScanning:!1,apiOutputDisplayCount:20,activeMenuItem:"scanListMenuItem",activeApiTabName:"scan",activeApiOutputTabName:"output",rssiChartStopped:!1,rssiChartSwitch:!1,rssiChartPeriod:60,rssiChartDataSpan:2e3,rssiChartDataCount:30,apiDebuggerParams:{[u.SCAN]:{chip:0,filter_name:[],filter_mac:[],filter_rssi:-65},[u.CONNECT]:{chip:0,deviceMac:"",addrType:f.PUBLIC},[u.READ]:{deviceMac:"",handle:""},[u.WRITE]:{deviceMac:"",handle:"",value:"",noresponse:!1},[u.DISCONNECT]:{deviceMac:""}}}},g={scanDisplayFilterContent:"",notifyDisplayFilterContent:"",isApiDebuggerLoading:!1,isNotifyLoading:!1,devicesConnectLoading:{},apiDebuggerResult:{[u.SCAN]:{sse:null,resultList:[{time:1582882186095,data:'{"name":"(unknown)","evtType":3,"rssi":-80,"adData":"1EFF06000109200262A12A0E18F1516C3D7DABD42556C51B45E9094EB88D2B","bdaddrs":[{"bdaddr":"76:95:9B:89:BB:A5","bdaddrType":"random"}]}'}],displayResultList:[],code:{[l.CURL]:"",[l.NODEJS]:""}},[u.CONNECT]:{resultList:[],code:{[l.CURL]:"",[l.NODEJS]:""}},[u.READ]:{resultList:[],code:{[l.CURL]:"",[l.NODEJS]:""}},[u.WRITE]:{resultList:[],code:{[l.CURL]:"",[l.NODEJS]:""}},[u.DISCONNECT]:{resultList:[],code:{[l.CURL]:"",[l.NODEJS]:""}}},scanResultList:[],notifyDisplayResultList:[],scanDisplayResultList:[],scanDevicesRssiHistory:{},connectedList:[],devicesServiceList:{},notifyResultList:[],notifyDisplayResultList:[]};function m(e,t){window.localStorage.setItem(e,t)}function y(e){return window.localStorage.getItem(e)}function D(e){let t=e.serverURI;return e.controlStyle===s.AC&&(t+="/api"),t}var A={save:m,get:y,saveDevConf:function(e){return e.controlStyle===s.AC?function(e){return e.baseURI=D(e),new Promise((function(t,n){U.getAccessToken(e.baseURI,e.acDevKey,e.acDevSecret).then((function(n){e.access_token=n.access_token,S.devConf=e,m("storageKey",JSON.stringify(S)),t()})).catch((function(e){n(e)}))}))}(e):function(e){return e.baseURI=D(e),S.devConf=e,m("storageKey",JSON.stringify(S)),Promise.resolve()}(e)},getDevConf:function(){return S.devConf},storage:S,cache:g,loadStorage:function(){S=JSON.parse(y("storageKey"))||S},getCache:function(){return g},getStorage:function(){return S},getDevConfDisplayVars:function(){return S.devConfDisplayVars},listAddOrUpdate:function(e,t,n){let r=_.find(e,t);r?_.forEach(n,(e,t)=>{r[t]=e}):e.push(n)}};const v=r.genModuleLogger("api");function R(e){let t=[];return _.forEach(e,(e,n)=>{_.isArray(e)&&(e=e.join(",")),t.push(`${n}=${e}`)}),t.join("&")}function I(e,t){let n={};return _.forEach(e,(e,r)=>{_.includes(t,r)&&function(e){return null!=e&&(!_.isArray(e)||0!==e.length)}(e)&&(n[r]=e)}),e.controlStyle===s.AC&&(n.mac=e.mac,n.access_token=e.access_token),n}function E(e){}function N(e){v.error("scan sse error:",e)}function b(e){v.info("connect status sse message:",e)}function B(e){v.error("connect status sse error:",e)}function L(e){v.info("notify sse message:",e)}function T(e){v.error("notify sse error:",e)}function w(e){const t=I(e,["chip","filter_mac","filter_name","filter_rssi"]);return t.active=1,t.event=1,function(e,t){return`${e}/gap/nodes?${R(t)}`}(e.baseURI,t)}function $(e){const t=I(e,[]);return function(e,t){return`${e}/management/nodes/connection-state?${R(t)}`}(e.baseURI,t)}function O(e,t,n){return function(e,t,n){let r=new EventSource(e);return r.onmessage=t||E,r.onerror=n||N,v.info("open scan sse:",e),r}(w(e),t,n)}axios.defaults.headers["Content-Type"]="application/json";var U={getAccessToken:function(e,t,n){const r=`${e}/oauth2/token`,i=axios.create({timeout:h.http.requestTimeout,headers:{Authorization:"Basic "+C.encode(`${t}:${n}`)}});return new Promise((e,t)=>{i.post(r,{grant_type:"client_credentials"}).then((function(t){v.info("get access token success:",t),e(t.data)})).catch((function(e){v.error("get access token error:",e),t(e)}))})},startScanByDevConf:O,startNotifyByDevConf:function(e,t,n){const r=I(e,[]);return r.event=1,function(e,t,n,r){const i=`${e}/gatt/nodes?${R(t)}`;let s=new EventSource(i);return s.onmessage=n||L,s.onerror=r||T,v.info("open notify sse:",i),s}(e.baseURI,r,t,n)},connectByDevConf:function(e,t,n,r=0){const i=I(e,[]),s=A.getCache().scanDisplayResultList;if(!n){const e=_.find(s,{mac:t});if(!e)return Promise.reject("can not get addr type");n=e.bdaddrType}return 0!==r&&1!==r||(i.chip=r),function(e,t,n,r){const i=`${e}/gap/nodes/${n}/connection/?${R(t)}`;return new Promise((e,t)=>{axios.post(i,{timeout:h.http.requestTimeout,type:r}).then((function(t){v.info("connect device success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("connect device error:",n),t(n)}))})}(e.baseURI,i,t,n)},disconnectByDevConf:function(e,t){const n=I(e,[]);return function(e,t,n){const r=`${e}/gap/nodes/${n}/connection/?${R(t)}`;return new Promise((e,t)=>{axios.delete(r).then((function(t){v.info("disconnect device success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("disconnect device error:",n),t(n)}))})}(e.baseURI,n,t)},getConnectedListByDevConf:function(e){const t=I(e,[]);return function(e,t){const n=`${e}/gap/nodes?${R(t)}&connection_state=connected`;return new Promise((e,t)=>{axios.get(n).then((function(t){v.info("get connected list success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("get connected list error:",n),t(n)}))})}(e.baseURI,t)},getDeviceServiceListByDevConf:function(e,t){const n=I(e,[]);return function(e,t,n){const r=`${e}/gatt/nodes/${n}/services/characteristics/descriptors?${R(t)}`;return new Promise((e,t)=>{axios.get(r).then((function(t){v.info("get device service list success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("get device service list error:",n),t(n)}))})}(e.baseURI,n,t)},readByHandleByDevConf:function(e,t,n){const r=I(e,[]);return function(e,t,n,r){const i=`${e}/gatt/nodes/${n}/handle/${r}/value?${R(t)}`;return new Promise((e,t)=>{axios.get(i).then((function(t){v.info("read handle success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("read handle error:",n),t(n)}))})}(e.baseURI,r,t,n)},writeByHandleByDevConf:function(e,t,n,r,i){const s=I(e,[]);return function(e,t,n,r,i,s=!1){let a=`${e}/gatt/nodes/${n}/handle/${r}/value/${i}?${R(t)}`;return s&&(a+="&noresponse=1"),new Promise((e,t)=>{axios.get(a).then((function(t){v.info("write handle success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;v.error("write handle error:",n),t(n)}))})}(e.baseURI,s,t,n,r,i)},getScanUrlByDevConf:w,openConnectStatusSseByDevConf:function(e,t,n){return function(e,t,n){let r=new EventSource(e);return r.onmessage=t||b,r.onerror=n||B,v.info("connect status sse:",e),r}($(e),t,n)},getConnectUrlByDevConf:function(e,t,n){const r=I(e,[]);return 0!==n&&1!==n||(r.chip=n),function(e,t,n){return`${e}/gap/nodes/${t}/connection?${R(n)}`}(e.baseURI,t,r)},getReadUrlByDevConf:function(e,t,n){const r=I(e,[]);return function(e,t,n,r){return`${e}/gatt/nodes/${t}/handle/${n}/value?${R(r)}`}(e.baseURI,t,n,r)},getWriteUrlByDevConf:function(e,t,n,r,i){const s=I(e,[]);return i&&(s.noresponse=1),function(e,t,n,r,i){return`${e}/gatt/nodes/${t}/handle/${n}/value/${r}?${R(i)}`}(e.baseURI,t,n,r,s)},getDisconnectUrlByDevConf:function(e,t){const n=I(e,[]);return function(e,t,n){return`${e}/gap/nodes/${t}/connection?${R(n)}`}(e.baseURI,t,n)},startScanByUserParams:function(e,t,n,r,i,s,a){const o=_.cloneDeep(e);return o.chip=t,o.filter_mac=n,o.filter_name=r,o.filter_rssi=i,O(o,s,a)}};const P=r.genModuleLogger("scan");let M=null;function F(e){const t=A.getCache(),n=A.getStorage(),r=JSON.parse(e.data),i=r.bdaddrs[0],s=i.bdaddr,a=i.bdaddrType;let o=_.find(t.scanResultList,{mac:s});o?("(unknown)"!==r.name&&(o.name=r.name),o.rssi=r.rssi):t.scanResultList.push({mac:s,name:r.name,adData:r.adData,bdaddrType:a,rssi:r.rssi}),n.devConfDisplayVars.rssiChartSwitch&&(t.scanDevicesRssiHistory[s]?t.scanDevicesRssiHistory[s].push({time:Date.now(),rssi:r.rssi}):Ve.setObjProperty(t.scanDevicesRssiHistory,s,[{time:Date.now(),rssi:r.rssi}]))}function x(e){P.error("scan sse error:",e),Ve.notify(`停止扫描，扫描SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),M.close(),M=null}var V={startScan:function(e){return M||(M=U.startScanByDevConf(e,F,x),M)},stopScan:function(){M&&(M.close(),M=null),Ve.notify("停止扫描成功","操作成功",o.SUCCESS)}};const H={1800:"Generic Access",1811:"Alert Notification Service",1815:"Automation IO","180F":"Battery Service","183B":"Binary Sensor",1810:"Blood Pressure","181B":"Body Composition","181E":"Bond Management Service","181F":"Continuous Glucose Monitoring",1805:"Current Time Service",1818:"Cycling Power",1816:"Cycling Speed and Cadence","180A":"Device Information","183C":"Emergency Configuration","181A":"Environmental Sensing",1826:"Fitness Machine",1801:"Generic Attribute",1808:"Glucose",1809:"Health Thermometer","180D":"Heart Rate",1823:"HTTP Proxy",1812:"Human Interface Device",1802:"Immediate Alert",1821:"Indoor Positioning","183A":"Insulin Delivery",1820:"Internet Protocol Support Service",1803:"Link Loss",1819:"Location and Navigation",1827:"Mesh Provisioning Service",1828:"Mesh Proxy Service",1807:"Next DST Change Service",1825:"Object Transfer Service","180E":"Phone Alert Status Service",1822:"Pulse Oximeter Service",1829:"Reconnection Configuration",1806:"Reference Time Update Service",1814:"Running Speed and Cadence",1813:"Scan Parameters",1824:"Transport Discovery",1804:"User Data","181D":"Weight Scale"};var G={getNameByUuid:function(e){let t=parseInt(e.split("-")[0],16).toString(16).toUpperCase();return H[t]||"Unknown Service"}};const k={"2A7E":"Aerobic Heart Rate Lower Limit","2A84":"Aerobic Heart Rate Upper Limit","2A7F":"Aerobic Threshold","2A80":"Age","2A5A":"Aggregate","2A43":"Alert Category ID","2A42":"Alert Category ID Bit Mask","2A06":"Alert Level","2A44":"Alert Notification Control Point","2A3F":"Alert Status","2AB3":"Altitude","2A81":"Anaerobic Heart Rate Lower Limit","2A82":"Anaerobic Heart Rate Upper Limit","2A83":"Anaerobic Threshold","2A58":"Analog","2A59":"Analog Output","2A73":"Apparent Wind Direction","2A72":"Apparent Wind Speed","2A01":"Appearance","2AA3":"Barometric Pressure Trend","2A19":"Battery Level","2A1B":"Battery Level State","2A1A":"Battery Power State","2A49":"Blood Pressure Feature","2A35":"Blood Pressure Measurement","2A9B":"Body Composition Feature","2A9C":"Body Composition Measurement","2A38":"Body Sensor Location","2AA4":"Bond Management Control Point","2AA5":"Bond Management Features","2A22":"Boot Keyboard Input Report","2A32":"Boot Keyboard Output Report","2A33":"Boot Mouse Input Report","2B2B":"BSS Control Point","2B2C":"BSS Response","2AA8":"CGM Feature","2AA7":"CGM Measurement","2AAB":"CGM Session Run Time","2AAA":"CGM Session Start Time","2AAC":"CGM Specific Ops Control Point","2AA9":"CGM Status","2B29":"Client Supported Features","2ACE":"Cross Trainer Data","2A5C":"CSC Feature","2A5B":"CSC Measurement","2A2B":"Current Time","2A66":"Cycling Power Control Point","2A65":"Cycling Power Feature","2A63":"Cycling Power Measurement","2A64":"Cycling Power Vector","2A99":"Database Change Increment","2B2A":"Database Hash","2A85":"Date of Birth","2A86":"Date of Threshold Assessment","2A08":"Date Time","2AED":"Date UTC","2A0A":"Day Date Time","2A09":"Day of Week","2A7D":"Descriptor Value Changed","2A7B":"Dew Point","2A56":"Digital","2A57":"Digital Output","2A0D":"DST Offset","2A6C":"Elevation","2A87":"Email Address","2B2D":"Emergency ID","2B2E":"Emergency Text","2A0B":"Exact Time 100","2A0C":"Exact Time 256","2A88":"Fat Burn Heart Rate Lower Limit","2A89":"Fat Burn Heart Rate Upper Limit","2A26":"Firmware Revision String","2A8A":"First Name","2AD9":"Fitness Machine Control Point","2ACC":"Fitness Machine Feature","2ADA":"Fitness Machine Status","2A8B":"Five Zone Heart Rate Limits","2AB2":"Floor Number","2AA6":"Central Address Resolution","2A00":"Device Name","2A04":"Peripheral Preferred Connection Parameters","2A02":"Peripheral Privacy Flag","2A03":"Reconnection Address","2A05":"Service Changed","2A8C":"Gender","2A51":"Glucose Feature","2A18":"Glucose Measurement","2A34":"Glucose Measurement Context","2A74":"Gust Factor","2A27":"Hardware Revision String","2A39":"Heart Rate Control Point","2A8D":"Heart Rate Max","2A37":"Heart Rate Measurement","2A7A":"Heat Index","2A8E":"Height","2A4C":"HID Control Point","2A4A":"HID Information","2A8F":"Hip Circumference","2ABA":"HTTP Control Point","2AB9":"HTTP Entity Body","2AB7":"HTTP Headers","2AB8":"HTTP Status Code","2ABB":"HTTPS Security","2A6F":"Humidity","2B22":"IDD Annunciation Status","2B25":"IDD Command Control Point","2B26":"IDD Command Data","2B23":"IDD Features","2B28":"IDD History Data","2B27":"IDD Record Access Control Point","2B21":"IDD Status","2B20":"IDD Status Changed","2B24":"IDD Status Reader Control Point","2A2A":"IEEE 11073-20601 Regulatory Certification Data List","2AD2":"Indoor Bike Data","2AAD":"Indoor Positioning Configuration","2A36":"Intermediate Cuff Pressure","2A1E":"Intermediate Temperature","2A77":"Irradiance","2AA2":"Language","2A90":"Last Name","2AAE":"Latitude","2A6B":"LN Control Point","2A6A":"LN Feature","2AB1":"Local East Coordinate","2AB0":"Local North Coordinate","2A0F":"Local Time Information","2A67":"Location and Speed Characteristic","2AB5":"Location Name","2AAF":"Longitude","2A2C":"Magnetic Declination","2AA0":"Magnetic Flux Density – 2D","2AA1":"Magnetic Flux Density – 3D","2A29":"Manufacturer Name String","2A91":"Maximum Recommended Heart Rate","2A21":"Measurement Interval","2A24":"Model Number String","2A68":"Navigation","2A3E":"Network Availability","2A46":"New Alert","2AC5":"Object Action Control Point","2AC8":"Object Changed","2AC1":"Object First-Created","2AC3":"Object ID","2AC2":"Object Last-Modified","2AC6":"Object List Control Point","2AC7":"Object List Filter","2ABE":"Object Name","2AC4":"Object Properties","2AC0":"Object Size","2ABF":"Object Type","2ABD":"OTS Feature","2A5F":"PLX Continuous Measurement Characteristic","2A60":"PLX Features","2A5E":"PLX Spot-Check Measurement","2A50":"PnP ID","2A75":"Pollen Concentration","2A2F":"Position 2D","2A30":"Position 3D","2A69":"Position Quality","2A6D":"Pressure","2A4E":"Protocol Mode","2A62":"Pulse Oximetry Control Point","2A78":"Rainfall","2B1D":"RC Feature","2B1E":"RC Settings","2B1F":"Reconnection Configuration Control Point","2A52":"Record Access Control Point","2A14":"Reference Time Information","2B37":"Registered User Characteristic","2A3A":"Removable","2A4D":"Report","2A4B":"Report Map","2AC9":"Resolvable Private Address Only","2A92":"Resting Heart Rate","2A40":"Ringer Control point","2A41":"Ringer Setting","2AD1":"Rower Data","2A54":"RSC Feature","2A53":"RSC Measurement","2A55":"SC Control Point","2A4F":"Scan Interval Window","2A31":"Scan Refresh","2A3C":"Scientific Temperature Celsius","2A10":"Secondary Time Zone","2A5D":"Sensor Location","2A25":"Serial Number String","2B3A":"Server Supported Features","2A3B":"Service Required","2A28":"Software Revision String","2A93":"Sport Type for Aerobic and Anaerobic Thresholds","2AD0":"Stair Climber Data","2ACF":"Step Climber Data","2A3D":"String","2AD7":"Supported Heart Rate Range","2AD5":"Supported Inclination Range","2A47":"Supported New Alert Category","2AD8":"Supported Power Range","2AD6":"Supported Resistance Level Range","2AD4":"Supported Speed Range","2A48":"Supported Unread Alert Category","2A23":"System ID","2ABC":"TDS Control Point","2A6E":"Temperature","2A1F":"Temperature Celsius","2A20":"Temperature Fahrenheit","2A1C":"Temperature Measurement","2A1D":"Temperature Type","2A94":"Three Zone Heart Rate Limits","2A12":"Time Accuracy","2A15":"Time Broadcast","2A13":"Time Source","2A16":"Time Update Control Point","2A17":"Time Update State","2A11":"Time with DST","2A0E":"Time Zone","2AD3":"Training Status","2ACD":"Treadmill Data","2A71":"True Wind Direction","2A70":"True Wind Speed","2A95":"Two Zone Heart Rate Limit","2A07":"Tx Power Level","2AB4":"Uncertainty","2A45":"Unread Alert Status","2AB6":"URI","2A9F":"User Control Point","2A9A":"User Index","2A76":"UV Index","2A96":"VO2 Max","2A97":"Waist Circumference","2A98":"Weight","2A9D":"Weight Measurement","2A9E":"Weight Scale Feature","2A79":"Wind Chill"};var W={getNameByUuid:function(e){let t=parseInt(e.split("-")[0],16).toString(16).toUpperCase();return k[t]||"Unknown Characteristics"}};function j(e){return _.forEach(e,e=>{e.name=G.getNameByUuid(e.uuid),_.forEach(e.characteristics,e=>{if(e.name=W.getNameByUuid(e.uuid),e.propertiesStr=function(e){const t=[i.BROADCASTS,i.READ,i.WRITE_NO_RES,i.WRITE,i.NOTIFY,i.INDICATE,i.AUTHEN,i.EXTENDED];let n=[];return _.forEach(t,(t,r)=>{1<<r&e&&n.push(t)}),n}(e.properties),_.includes(e.propertiesStr,i.NOTIFY)){const t=_.find(e.descriptors,e=>e.uuid.startsWith("00002902"));t&&(e.notifyHandle=t.handle)}e.readValue="",e.writeValue="",e.notifyStatus=a.OFF,e.writeValueType=c.HEX})}),e}var J={getCharByHandle:function(e,t){const n=A.getCache().devicesServiceList[e];for(let e=0;e<n.length;e++){let r=n[e];r.characteristics=r.characteristics||[];for(let e=0;e<r.characteristics.length;e++){let n=r.characteristics[e];if(n.handle===t)return n}}return null},getDeviceServiceList:function(e){const t=A.getDevConf(),n=A.getCache();U.getDeviceServiceListByDevConf(t,e).then(t=>{Ve.setObjProperty(n.devicesServiceList,e,j(t))})}};const q=r.genModuleLogger("characteristic-parser"),X={"Device Name":function(e){return[{name:"Name",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},Appearance:function(e){const t=buffer.Buffer.from(e,"hex").readUInt16LE().toString();return[{name:"Category",raw:e,parsed:ue[t]}]},"Peripheral Preferred Connection Parameters":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=1.25*n.readUInt16LE();t.push({name:"Minimum Connection Interval",raw:n.slice(0,2).toString("hex"),parsed:65535===r?"no specific minimum":`${r}ms, [6, 3200]`});const i=1.25*n.readUInt16LE(2);t.push({name:"Maximum Connection Interval",raw:n.slice(2,4).toString("hex"),parsed:65535===i?"no specific minimum":`${r}ms, [6, 3200]`});const s=n.readUInt16LE(4);t.push({name:"Slave Latency",raw:n.slice(4,6).toString("hex"),parsed:`${s}, [0, 1000]`});const a=n.readUInt16LE(6);t.push({name:"Minimum Connection Interval",raw:n.slice(6,8).toString("hex"),parsed:`${a}, [10, 3200]`})}catch(e){q.error(e)}return t},"Service Changed":function(e){try{const t=buffer.Buffer.from(e,"hex"),n=t.readUInt16LE(0),r=t.readUInt16LE(2);return[{name:"Start of Affected Attribute Handle Range",raw:t.slice(0,2).toString("hex"),parsed:`${n}, [1, 65535]`},{name:"End of Affected Attribute Handle Range",raw:t.slice(2,4).toString("hex"),parsed:`${r}, [1, 65535]`}]}catch(e){console.error(e)}return[]},"Model Number String":function(e){return[{name:"Model Number",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},"Serial Number String":function(e){return[{name:"Serial Number",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},"Hardware Revision String":function(e){return[{name:"Hardware Revision",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},"Firmware Revision String":function(e){return[{name:"Firmware Revision",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},"Software Revision String":function(e){return[{name:"Software Revision",raw:e,parsed:buffer.Buffer.from(e,"hex").toString()}]},"System ID":function(e){buffer.Buffer.from(e,"hex");return[]},"PnP ID":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8(0);t.push({name:"Vendor ID Source",raw:n.slice(0,1).toString("hex"),parsed:ce[r]||`${r}, [1, 2]`});const i=n.readUInt16LE(1);t.push({name:"Vendor ID",raw:n.slice(1,3).toString("hex"),parsed:i});const s=n.readUInt16LE(3);t.push({name:"Product ID",raw:n.slice(3,5).toString("hex"),parsed:s});const a=n.readUInt16LE(5);t.push({name:"Product Version",raw:n.slice(5,7).toString("hex"),parsed:a})}catch(e){q.error(e)}return t},"New Alert":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8();t.push({name:"Category ID",raw:n.slice(0,1).toString("hex"),parsed:oe(r)});const i=n.readUInt8(1);t.push({name:"Number of New Alert",raw:n.slice(1,2),parsed:`${i}, [0, 255]`});const s=n.slice(2);t.push({name:"Text String Information",raw:s.toString("hex"),parsed:s.toString()})}catch(e){q.error(e)}return t},"Alert Notification Control Point":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8();t.push({name:"Command ID",raw:n.slice(0,1).toString("hex"),parsed:se(r)});const i=n.readUInt8(1);t.push({name:"Category ID",raw:n.slice(1,2).toString("hex"),parsed:oe(i)})}catch(e){q.error(e)}return t},"Current Time":function(e){let t=[];try{const n=Z(buffer.Buffer.from(e,"hex").slice(0,9).toString("hex"));t.splice(0,n.length,...n)}catch(e){q.error(e)}return t},"Date Time":re,"Day Date Time":te,"Day of Week":ee,"Exact Time 256":Z,"Manufacturer Name String":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex");t.push({name:"Manufacturer Name",raw:e,parsed:n.toString()})}catch(e){q.error(e)}return t},"IEEE 11073-20601 Regulatory Certification Data List":function(e){try{buffer.Buffer.from(e,"hex")}catch(e){q.error(e)}return[]},"Body Sensor Location":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8(0);t.push({name:"Body Sensor Location",raw:n.slice(0,1).toString("hex"),parsed:z(r)})}catch(e){q.error(e)}return t},"Battery Level":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8(0);t.push({name:"Level",raw:n.slice(0,1).toString("hex"),parsed:`${r}%, [0, 100]`})}catch(e){q.error(e)}return t},"Alert Level":function(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt8(0);t.push({name:"Level",raw:n.slice(0,1).toString("hex"),parsed:K[r]||"Reserved"})}catch(e){q.error(e)}return t}},K={0:"No Alert",1:"Mild Alert",2:"High Alert"};const Y={0:"Other",1:"Chest",2:"Wrist",3:"Finger",4:"Hand",5:"Ear Lobe",6:"Foot"};function z(e){return e>=7&&e<=255?"ReservedForFutureUse":Y[e]||e}function Z(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=te(n.slice(0,8).toString("hex"));t.splice(0,r.length,...r);const i=n.readUInt8(8,9);t.push({name:"Fractions256",raw:n.slice(8,9).toString("hex"),parsed:`${i}, [0, 255]`})}catch(e){q.error(e)}return t}const Q={0:"Day of week is not known",1:"Monday",2:"Tuesday",3:"Wednesday",4:"Thursday",5:"Friday",6:"Saturday",7:"Sunday"};function ee(e){let t=[];try{const n=buffer.Buffer.from(e,"hex");let r=n.readUInt8();t.push({name:"Day of Week",raw:n.slice(0,1).toString("hex"),parsed:Q[r]})}catch(e){q.error(e)}return t}function te(e){let t=[];try{const n=buffer.Buffer.from(e,"hex");let r=re(n.slice(0,7).toString("hex"));t.splice(0,r.length,...r);let i=ee(n.slice(7,8).toString("hex"));t.splice(t.length,i.length,...i)}catch(e){q.error(e)}return t}const ne={0:"Month is not known",1:"January",2:"February",3:"March",4:"April",5:"May",6:"June",7:"July",8:"August",9:"September",10:"October",11:"November",12:"December"};function re(e){let t=[];try{const n=buffer.Buffer.from(e,"hex"),r=n.readUInt16LE(0,2);t.push({name:"Year",raw:n.slice(0,2).toString("hex"),parsed:0===r?"Year is not known":`${r}, [1582, 9999]`});const i=n.readUInt8(2);t.push({name:"Month",raw:n.slice(2,3).toString("hex"),parsed:ne[i]});const s=n.readUInt8(3);t.push({name:"Day",raw:n.slice(3,4).toString("hex"),parsed:0===s?"Day of Month is not known":s});const a=n.readUInt8(4);t.push({name:"Hours",raw:n.slice(4,5).toString("hex"),parsed:a});const o=n.readUInt8(5);t.push({name:"Minutes",raw:n.slice(5,6).toString("hex"),parsed:o});const c=n.readUInt8(6);t.push({name:"Seconds",raw:n.slice(6,7).toString("hex"),parsed:c})}catch(e){q.error(e)}return t}const ie={0:"Enable New Incoming Alert Notification",1:"Enable Unread Category Status Notification",2:"Disable New Incoming Alert Notification",3:"Disable Unread Category Status Notification",4:"Notify New Incoming Alert immediately",5:"Notify Unread Category Status immediately"};function se(e){return e>=6&&e<=255?"ReservedForFutureUse":ie[e]||e}const ae={0:"Simple Alert: General text alert or non-text alert",1:"Email: Alert when Email messages arrives",2:"News: News feeds such as RSS, Atom",3:"Call: Incoming call",4:"Missed call: Missed Call",5:"SMS/MMS: SMS/MMS message arrives",6:"Voice mail: Voice mail",7:"Schedule: Alert occurred on calendar, planner",8:"High Prioritized Alert: Alert that should be handled as high priority",9:"Instant Message: Alert for incoming instant messages"};function oe(e){return e>=10&&e<=250?"ReservedForFutureUse":e>=251&&e<=255?"DefinedByServiceSpecification":ae[e]}const ce={1:"Bluetooth SIG assigned Company Identifier value from the Assigned Numbers document",2:"USB Implementer’s Forum assigned Vendor ID value"};const ue={0:"Unknown",64:"Generic Phone",128:"Generic Computer",192:"Generic Watch",193:"Watch: Sports Watch",256:"Generic Clock",320:"Generic Display",384:"Generic Remote Control",448:"Generic Eye-glasses",512:"Generic Tag",576:"Generic Keyring",640:"Generic Media Player",704:"Generic Barcode Scanner",768:"Generic Thermometer",769:"Thermometer: Ear",832:"Generic Heart rate Sensor",833:"Heart Rate Sensor: Heart Rate Belt",896:"Generic Blood Pressure",897:"Blood Pressure: Arm",898:"Blood Pressure: Wrist",960:"Human Interface Device (HID)",961:"Keyboard",962:"Mouse",963:"Joystick",964:"Gamepad",965:"Digitizer Tablet",966:"Card Reader",967:"Digital Pen",968:"Barcode Scanner",1024:"Generic Glucose Meter",1088:"Generic: Running Walking Sensor",1089:"Running Walking Sensor: In-Shoe",1090:"Running Walking Sensor: On-Shoe",1091:"Running Walking Sensor: On-Hip",1152:"Generic: Cycling",1153:"Cycling: Cycling Computer",1154:"Cycling: Speed Sensor",1155:"Cycling: Cadence Sensor",1156:"Cycling: Power Sensor",1157:"Cycling: Speed and Cadence Sensor",3136:"Generic: Pulse Oximeter",3137:"Fingertip",3138:"Wrist Worn",3200:"Generic: Weight Scale",3264:"Generic Personal Mobility Device",3265:"Powered Wheelchair",3266:"Mobility Scooter",3328:"Generic Continuous Glucose Monitor",3392:"Generic Insulin Pump",3393:"Insulin Pump, durable pump",3396:"Insulin Pump, patch pump",3400:"Insulin Pen",3456:"Generic Medication Delivery",5184:"Generic: Outdoor Sports Activity",5185:"Location Display Device",5186:"Location and Navigation Display Device",5187:"Location Pod",5188:"Location and Navigation Pod"};var le={getParsedValues:function(e,t){return X[e]?X[e](t):null}};const fe=r.genModuleLogger("operation"),de={[i.READ]:function(e,t,n){const r=A.getDevConf(),i=n.handle;U.readByHandleByDevConf(r,t,i).then(e=>{n.readValue=e.value||"No Data",n.parsedReadValues=le.getParsedValues(n.name,n.readValue),Ve.notify(`读取设备 ${t} handle ${i} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{n.readValue="",n.parsedReadValues=[],Ve.notify(`读取设备 ${t} handle ${i} 失败: ${e}`,"操作失败",o.ERROR),fe.error(e)})},[i.NOTIFY]:function(e,t,n){const r=A.getDevConf(),i=n.notifyHandle||n.handle;let s=n.notifyStatus===a.ON?"0000":"0100";U.writeByHandleByDevConf(r,t,i,s,!1).then(()=>{n.notifyStatus===a.ON?n.notifyStatus=a.OFF:n.notifyStatus===a.OFF&&(n.notifyStatus=a.ON),Ve.notify(`下发设备通知 ${t} handle ${i} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{Ve.notify(`下发设备通知 ${t} handle ${i} 失败: ${e}`,"操作失败",o.ERROR)})},[i.WRITE_NO_RES]:function(e,t,n){const r=A.getDevConf(),i=n.handle,s=n.writeValue;n.writeValueType===c.TEXT&&(s=buffer.Buffer.from(s).toString("hex"));s=pe(s),U.writeByHandleByDevConf(r,t,i,s,!0).then(e=>{Ve.notify(`写入设备 ${t} handle ${i} value ${s} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{Ve.notify(`写入设备 ${t} handle ${i} value ${s} 失败: ${e}`,"操作失败",o.ERROR)})},[i.WRITE]:function(e,t,n){const r=A.getDevConf(),i=n.handle,s=n.writeValue;n.writeValueType===c.TEXT&&(s=textToHex(s));s=pe(s),U.writeByHandleByDevConf(r,t,i,s,!1).then(e=>{Ve.notify(`写入设备 ${t} handle ${i} value ${s} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{Ve.notify(`写入设备 ${t} handle ${i} value ${s} 失败: ${e}`,"操作失败",o.ERROR)})}};function pe(e){return e.trim().split(/\s+/).join("")}function he(e,t,n){const r=`no support operation: ${e}, ${t}, ${JSON.stringify(n)}`;return fe.warn(r),Promise.reject(r)}var Ce={dispatch:function(e,t,n){return(de[e]||he)(e,t,n)}};const Se={[u.SCAN]:{[l.CURL]:function(e){const t=A.getDevConf();let n=_.cloneDeep(t);return _.forEach(e,(e,t)=>{null!=e&&(n[t]=e)}),`\n  curl -H "Accept: text/event-stream" '${U.getScanUrlByDevConf(n)}'\n  `},[l.NODEJS]:function(e){const t=A.getDevConf();let n=_.cloneDeep(t);return _.forEach(e,(e,t)=>{null!=e&&(n[t]=e)}),`\n  const EventSource = require('eventsource');\n\n  const url = '${U.getScanUrlByDevConf(n)}';\n\n  const sse = new EventSource(url);\n\n  sse.onerror = function(error) {\n    console.log('open scan sse failed:', error);\n  };\n\n  sse.onmessage = function(message) {\n    console.log('recevied scan sse message:', message);\n  };\n  `}},[u.CONNECT]:{[l.CURL]:function(e){const t=A.getDevConf();return`\n  curl --location --request POST '${U.getConnectUrlByDevConf(t,e.deviceMac,e.chip)}'   --header 'Content-Type: application/json'   --data-raw '{\n    "timeout": 5000,\n    "type": "${e.addrType}"\n  }'\n  `},[l.NODEJS]:function(e){const t=A.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'POST',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac,e.chip)}',\n    'headers': {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({"timeout":5000,"type":"${e.addrType}"})\n\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[u.READ]:{[l.CURL]:function(e){const t=A.getDevConf();return`\n  curl --location --request GET '${U.getReadUrlByDevConf(t,e.deviceMac,e.handle)}'\n  `},[l.NODEJS]:function(e){const t=A.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'GET',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[u.WRITE]:{[l.CURL]:function(e){const t=A.getDevConf();return`\n  curl --location --request GET '${U.getWriteUrlByDevConf(t,e.deviceMac,e.handle,e.value,e.noresponse)}'\n  `},[l.NODEJS]:function(e){const t=A.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'GET',\n    'url': '${U.getWriteUrlByDevConf(t,e.deviceMac,e.handle,e.value,e.noresponse)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[u.DISCONNECT]:{[l.CURL]:function(e){const t=A.getDevConf();return`\n  curl --location --request DELETE '${U.getDisconnectUrlByDevConf(t,e.deviceMac)}'\n  `},[l.NODEJS]:function(e){const t=A.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'DELETE',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}}};var ge={genCode:function(e,t,n){return Se[e][t](n)}};const me=r.genModuleLogger("notify");let ye=null;function De(e){const t=JSON.parse(e.data);me.info("notify sse message:",e),A.getCache().notifyResultList.push({time:Date.now(),mac:t.id,handle:t.handle,value:t.value})}function Ae(e){me.error("notify sse error:",e),Ve.notify(`关闭设备通知SSE，SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),ye.close(),ye=null}function ve(){if(ye)return ye;const e=A.getDevConf();ye=U.startNotifyByDevConf(e,De,Ae)}function Re(){ye&&(ye.close(),ye=null)}var Ie={openNotifySse:ve,closeNotifySse:Re,reopenNotifySse:function(){Re(),ve()}};const Ee=r.genModuleLogger("connect");let Ne=null;function be(e){const t=A.getCache(),n=JSON.parse(e.data);"connected"===n.connectionState?(A.listAddOrUpdate(A.getCache().connectedList,{mac:n.handle},{mac:n.handle,chip:n.chipId}),Ve.notify(`chip${n.chipId} 连接${n.handle}成功`,"操作成功",o.SUCCESS)):"disconnected"===n.connectionState&&(_.remove(t.connectedList,{mac:n.handle}),Ve.notify(`设备 ${n.handle} 断开连接`,"通知提示",o.WARNING))}function Be(e){Ee.error("connect status sse error:",e),Ve.notify(`关闭连接状态SSE，SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),Ne.close(),Ne=null}function Le(){const e=A.getDevConf();Ne=U.openConnectStatusSseByDevConf(e,be,Be)}function Te(){Ne&&(Ne.close(),Ne=null)}var we={loadConnectedList:function(){const e=A.getDevConf();U.getConnectedListByDevConf(e).then(e=>{const t=A.getCache();_.forEach(e.nodes,e=>{let n=_.find(t.connectedList,{mac:e.id});n?n.chip=e.chipId:t.connectedList.push({name:e.name||"(unknown)",mac:e.id,bdaddrType:e.type,chip:e.chipId})})})},openConnectStatusSse:Le,closeConnectStatusSse:Te,reopenConnectStatusSse:function(){Te(),Le()}};const $e=r.genModuleLogger("vue");let Oe=null;function Ue(e,t="",n=o.INFO,r=!0){const i={title:t,message:e,type:n};r||(i.duration=0),Oe.$notify(i)}function Pe(){let e=echarts.init(document.getElementById("rssiChart")),t=function(){let e=[];const t=A.getDevConfDisplayVars();t.rssiChartDataCount=1e3*t.rssiChartPeriod/t.rssiChartDataSpan;for(let n=0;n<t.rssiChartDataCount;n++)e.push((n*t.rssiChartDataSpan).toString());return e}();return e.setOption({title:{show:!1},grid:{right:"20%"},legend:{type:"scroll",orient:"vertical",x:"right",y:"center"},xAxis:{type:"category",data:t,axisLabel:{show:!0,rotate:45,interval:0,formatter:function(e,t){return""}}},yAxis:{type:"value",min:-100,max:-10,splitNumber:10,inverse:!0},series:[]}),e.resize(),e}function Me(e){return{scanTabsClick(e){this.$refs.refScanDisplayResultGrid.updateData(),this.$refs.refScanDisplayResultGrid.refreshScroll()},scanDisplayResultClear(){this.cache.scanDisplayResultList.splice(0)},notifyDisplayResultClear(){this.cache.notifyDisplayResultList.splice(0)},scanDisplayResultExport(){this.$refs.refScanDisplayResultGrid.exportData({type:"csv"})},notifyDisplayResultExport(){this.$refs.refNotifyDisplayResultGrid.exportData({type:"csv"})},loadNotifyResult(){this.cache.isNotifyLoading=!0;let e=this.cache.notifyResultList.splice(0,5),t=_.map(e,e=>`${new Date(e.time).toISOString()}: ${e.data}`);if(0!==e.length){let e=this.cache.notifyDisplayResultList.length;this.cache.notifyDisplayResultList.splice(e,t.length,...t),this.cache.isNotifyLoading=!1}else setTimeout((function(e){e.cache.isNotifyLoading=!1,e.loadNotifyResult()}),500,this)},loadApiDebuggerResult(){if(this.store.devConfDisplayVars.activeApiTabName===u.SCAN){const e=5;this.cache.isApiDebuggerLoading=!0;let t=this.cache.apiDebuggerResult[u.SCAN].resultList.splice(0,e),n=_.map(t,e=>`${new Date(e.time).toISOString()}: ${e.data}`);if(0!==t.length){let e=this.cache.apiDebuggerResult[u.SCAN].displayResultList.length;this.cache.apiDebuggerResult[u.SCAN].displayResultList.splice(e,n.length,...n),this.cache.isApiDebuggerLoading=!1}else setTimeout((function(e){e.cache.isApiDebuggerLoading=!1,e.loadApiDebuggerResult()}),500,this)}},startDebugApi(){const e=this.store.devConfDisplayVars.activeApiTabName,t=this.store.devConfDisplayVars.apiDebuggerParams[e],n=this.cache.apiDebuggerResult[e];e===u.SCAN?(n.sse=U.startScanByUserParams(this.store.devConf,t.chip,t.filter_mac,t.filter_name,t.filter_rssi,e=>{this.store.devConfDisplayVars.isApiScanResultDisplayOn&&this.cache.apiDebuggerResult[u.SCAN].resultList.push({time:Date.now(),data:e.data.trim()})}),setTimeout(()=>{n.sse.close(),n.sse=null,this.store.devConfDisplayVars.isApiScanning=!1,Ue("已自动停止API扫描","操作成功",o.SUCCESS)},1e4),this.store.devConfDisplayVars.isApiScanning=!0,this.store.devConfDisplayVars.activeApiOutputTabName="output",Ue("调试API扫描自动执行10秒，正常的SSE会一直收到数据","操作成功",o.SUCCESS)):e===u.CONNECT?U.connectByDevConf(this.store.devConf,t.deviceMac,t.addrType).then(()=>{n.resultList.push(`${(new Date).toISOString()}: 连接设备成功, ${JSON.stringify(t)}`)}).catch(e=>{Ue(`连接设备 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 连接设备失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===u.READ?U.readByHandleByDevConf(this.store.devConf,t.deviceMac,t.handle).then(()=>{Ue(`读取数据 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 读取数据成功, ${JSON.stringify(t)}`)}).catch(e=>{Ue(`读取数据 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 读取数据失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===u.WRITE?U.writeByHandleByDevConf(this.store.devConf,t.deviceMac,t.handle,t.value,t.noresponse).then(()=>{Ue(`写入数据 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 写入数据成功, ${JSON.stringify(t)}`)}).catch(e=>{Ue(`写入数据 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 写入数据失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===u.DISCONNECT&&U.disconnectByDevConf(this.store.devConf,t.deviceMac).then(()=>{Ue(`断连设备 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 断连设备成功, ${JSON.stringify(t)}`)}).catch(e=>{Ue(`断连设备 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 断连设备失败, ${JSON.stringify({apiParams:t,ex:e})}`)})},openApiOutputDisplay(){this.store.devConfDisplayVars.isApiScanResultDisplayOn=!0,Ue("开启API结果成功","操作成功",o.SUCCESS)},closeApiOutputDisplay(){this.store.devConfDisplayVars.isApiScanResultDisplayOn=!1,Ue("关闭API结果成功","操作成功",o.SUCCESS)},exportApiOutputDisplay(){Ue("功能待添加","操作失败",o.ERROR)},clearApiOutputDisplay(){this.store.devConfDisplayVars.activeApiTabName===u.SCAN&&this.cache.apiDebuggerResult[this.store.devConfDisplayVars.activeApiTabName].displayResultList.splice(0),this.cache.apiDebuggerResult[this.store.devConfDisplayVars.activeApiTabName].resultList.splice(0),Ue("清除API结果成功","操作成功",o.SUCCESS)},clearNotify(){this.cache.notifyResultList.splice(0),this.cache.notifyDisplayResultList.splice(0),Ue("清除Notify成功","操作成功",o.SUCCESS)},openNotify(){Ie.openNotifySse(),this.store.devConfDisplayVars.isNotifyOn=!0,Ue("开启Notify成功","操作成功",o.SUCCESS)},closeNotify(){Ie.closeNotifySse(),this.store.devConfDisplayVars.isNotifyOn=!1,Ue("关闭Notify成功","操作成功",o.SUCCESS)},stopRssiChart(){clearInterval(Oe.rssiChartUpdateInterval),Oe.rssiChartUpdateInterval=null,this.store.devConfDisplayVars.rssiChartStopped=!0},startRssiChart(){Oe.rssiChartUpdateInterval=function(){const e=A.getDevConfDisplayVars();return setInterval((function(){if(!Oe.rssiChart)return $e.warn("no rssi chart");$e.info("update rssi chart by interval");let t=Date.now(),n=function(e,t){let n=[];const r=A.getDevConfDisplayVars();if(r.rssiChartDataCount=1e3*r.rssiChartPeriod/r.rssiChartDataSpan,_.keys(A.getCache().scanDevicesRssiHistory).length>5)return Oe.destoryRssiChart(),Ue("当前扫描设备数量超过5个，已自动关闭rssi图表，请配置合适的扫描过滤参数，防止卡顿","操作失败",o.ERROR);return _.forEach(A.getCache().scanDevicesRssiHistory,(i,s)=>{let a=new Array(r.rssiChartDataCount);_.remove(i,t=>t.time<e),_.forEach(i,n=>{if(n.time>=e&&n.time<t){let t=parseInt((n.time-e)/r.rssiChartDataSpan);a[t]=n.rssi}}),n.push({name:s,type:"line",data:a})}),n}(t-1e3*e.rssiChartPeriod,t);Oe.rssiChart.setOption({series:n}),Oe.rssiChart.resize()}),e.rssiChartDataSpan)}(),this.store.devConfDisplayVars.rssiChartStopped=!1},destoryRssiChart(){clearInterval(Oe.rssiChartUpdateInterval),Oe.rssiChart=null,Oe.rssiChartUpdateInterval=null,this.store.devConfDisplayVars.rssiChartSwitch=!1},destoryAndCreateRssiChart(){this.store.devConfDisplayVars.isScanning?(this.destoryRssiChart(),setTimeout((function(e){Oe.rssiChart=Pe(),Oe.startRssiChart(),Ue("开启RSSI图表成功","操作成功",o.SUCCESS)}),100),this.store.devConfDisplayVars.rssiChartSwitch=!0):this.$confirm("此操作需要开启扫描, 是否继续?（请配置合适的扫描过滤参数，不超过5个设备，否则会自动暂停）","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(()=>{this.startScan(),this.destoryRssiChart(),setTimeout((function(e){Oe.rssiChart=Pe(),Oe.startRssiChart(),Ue("开启RSSI图表成功","操作成功",o.SUCCESS)}),100),this.store.devConfDisplayVars.rssiChartSwitch=!0}).catch(()=>{})},connectedListTabRemove(e){const t=this.cache.connectedList[e].mac;this.disconnectDevice(t)},rssiChartDataSpanChange(){this.devConfDisplayVars.rssiChartSwitch&&this.destoryAndCreateRssiChart()},genCode(){let e=this.store.devConfDisplayVars.activeApiTabName;const t=this.store.devConfDisplayVars.apiDebuggerParams[e],n=this.cache.apiDebuggerResult[e];n.code[l.CURL]=ge.genCode(e,l.CURL,t),n.code[l.NODEJS]=ge.genCode(e,l.NODEJS,t),this.store.devConfDisplayVars.activeApiOutputTabName=l.CURL},menuSelect(e,t){this.store.devConfDisplayVars.activeMenuItem=e,"connectListMenuItem"===e?(we.loadConnectedList(),we.reopenConnectStatusSse()):"notifyListMenuItem"===e?this.$refs.refNotifyDisplayResultGrid.recalculate():"scanListMenuItem"===e&&(this.$refs.refScanDisplayResultGrid.recalculate(),this.$refs.refScanDisplayResultGrid.updateData())},propertyClick(e,t,n){Ce.dispatch(e,t,n)},getDeviceServices(e){J.getDeviceServiceList(e)},startScan(){V.startScan(this.store.devConf),this.store.devConfDisplayVars.isScanning=!0,this.cache.scanResultList.splice(0),this.cache.scanDisplayResultList.splice(0),this.cache.scanDevicesRssiHistory={},this.store.devConfDisplayVars.activeMenuItem="scanListMenuItem",Ue("开启扫描成功","操作成功",o.SUCCESS)},stopApiScan(){},stopScan(){V.stopScan(),this.store.devConfDisplayVars.rssiChartSwitch&&this.stopRssiChart(),this.store.devConfDisplayVars.isScanning=!1},connectDevice(e,t){xe(this.cache.devicesConnectLoading,t,!0),U.connectByDevConf(this.store.devConf,t).then(()=>{_.remove(this.cache.scanResultList,{mac:t});let n=_.remove(this.cache.scanDisplayResultList,{mac:t});this.$refs.refScanDisplayResultGrid.remove([e]),this.$refs.refScanDisplayResultGrid.refreshData(),this.$refs.refScanDisplayResultGrid.recalculate(),this.$refs.refScanDisplayResultGrid.refreshScroll(),n.length>0&&A.listAddOrUpdate(this.cache.connectedList,{mac:n[0].mac},{mac:n[0].mac,name:n[0].name,bdaddrType:n[0].bdaddrType})}).catch(e=>{Ue(`连接设备 ${t} 失败: ${e}`,"操作失败",o.ERROR)}).then(()=>{xe(this.cache.devicesConnectLoading,t,!1)})},disconnectDevice(e){U.disconnectByDevConf(this.store.devConf,e).then(()=>{_.remove(this.cache.connectedList,{mac:e})}).catch((function(t){Ue(`设备 ${e} 断连失败: ${t}`,"操作失败",o.ERROR)}))},apiScanFilterNamesHandleClose(e){const t=this.store.devConfDisplayVars.apiDebuggerParams[u.SCAN].filter_name;t.splice(t.indexOf(e),1)},apiScanFilterNamesShowInput(){this.store.devConfDisplayVars.apiScanFilterNamesInputVisible=!0,this.$nextTick(e=>{this.$refs.apiScanFilterNamesSaveTagInput.$refs.input.focus()})},apiScanFilterNamesHandleInputConfirm(){let e=this.store.devConfDisplayVars.apiScanFilterNamesInputValue;e&&this.store.devConfDisplayVars.apiDebuggerParams[u.SCAN].filter_name.push(e),this.store.devConfDisplayVars.apiScanFilterNamesInputVisible=!1,this.store.devConfDisplayVars.apiScanFilterNamesInputValue=""},apiScanFilterMacsHandleClose(e){const t=this.store.devConfDisplayVars.apiDebuggerParams[u.SCAN].filter_mac;t.splice(t.indexOf(e),1)},apiScanFilterMacsShowInput(){this.store.devConfDisplayVars.apiScanFilterMacsInputVisible=!0,this.$nextTick(e=>{this.$refs.apiScanFilterMacsSaveTagInput.$refs.input.focus()})},apiScanFilterMacsHandleInputConfirm(){let e=this.store.devConfDisplayVars.apiScanFilterMacsInputValue;e&&this.store.devConfDisplayVars.apiDebuggerParams[u.SCAN].filter_mac.push(e),this.store.devConfDisplayVars.apiScanFilterMacsInputVisible=!1,this.store.devConfDisplayVars.apiScanFilterMacsInputValue=""},scanFilterNamesHandleClose(e){this.store.devConf.filter_name.splice(this.store.devConf.filter_name.indexOf(e),1)},scanFilterNamesShowInput(){this.store.devConfDisplayVars.scanFilterNamesInputVisible=!0,this.$nextTick(e=>{this.$refs.scanFilterNamesSaveTagInput.$refs.input.focus()})},scanFilterNamesHandleInputConfirm(){let e=this.store.devConfDisplayVars.scanFilterNamesInputValue;e&&this.store.devConf.filter_name.push(e),this.store.devConfDisplayVars.scanFilterNamesInputVisible=!1,this.store.devConfDisplayVars.scanFilterNamesInputValue=""},scanFilterMacsHandleClose(e){this.store.devConf.filter_mac.splice(this.store.devConf.filter_mac.indexOf(e),1)},scanFilterMacsShowInput(){this.store.devConfDisplayVars.scanFilterMacsInputVisible=!0,this.$nextTick(e=>{this.$refs.scanFilterMacsSaveTagInput.$refs.input.focus()})},scanFilterMacsHandleInputConfirm(){let e=this.store.devConfDisplayVars.scanFilterMacsInputValue;e&&this.store.devConf.filter_mac.push(e),this.store.devConfDisplayVars.scanFilterMacsInputVisible=!1,this.store.devConfDisplayVars.scanFilterMacsInputValue=""}}}function Fe(){return Oe}function xe(e,t,n){Fe().$set(e,t,n)}var Ve={notify:Ue,createVue:function(e){Vue.directive("highlightjs",{deep:!0,bind:function(e,t){var n,r,i=e.querySelectorAll("code");for(r=0;r<i.length;r+=1)n=i[r],"string"==typeof t.value&&(n.textContent=t.value),hljs.highlightBlock(n)},componentUpdated:function(e,t){var n,r,i=e.querySelectorAll("code");for(r=0;r<i.length;r+=1)n=i[r],"string"==typeof t.value&&(n.textContent=t.value,hljs.highlightBlock(n))}}),Oe=new Vue({el:`#${e}`,methods:Me(),data:function(){return{store:A.getStorage(),cache:A.getCache()}},mounted(){},watch:{"cache.apiDebuggerResult.scanCodeCurl":function(e,t){document.querySelectorAll("pre code").forEach(e=>{hljs.highlightBlock(e)})},"store.devConf":{handler:function(e,t){A.saveDevConf(e)},deep:!0}},computed:{getComputedNotifyDisplayResultList(){const e=XEUtils.toString(this.cache.notifyDisplayFilterContent).trim().toLowerCase();if(e){const t=new RegExp(e,"gi"),n=["mac","name"];return this.cache.notifyDisplayResultList.filter(t=>n.some(n=>XEUtils.toString(t[n]).toLowerCase().indexOf(e)>-1)).map(e=>{const r=Object.assign({},e);return n.forEach(e=>{r[e]=XEUtils.toString(r[e]).replace(t,e=>`<span class="keyword-lighten">${e}</span>`)}),r})}return this.cache.notifyDisplayResultList},getComputedScanDisplayResultList(){const e=XEUtils.toString(this.cache.scanDisplayFilterContent).trim().toLowerCase();if(e){const t=new RegExp(e,"gi"),n=["mac","name"];return this.cache.scanDisplayResultList.filter(t=>n.some(n=>XEUtils.toString(t[n]).toLowerCase().indexOf(e)>-1)).map(e=>{const r=Object.assign({},e);return n.forEach(e=>{r[e]=XEUtils.toString(r[e]).replace(t,e=>`<span class="keyword-lighten">${e}</span>`)}),r})}return this.cache.scanDisplayResultList}}}),setInterval((function(){let e=A.getCache().scanResultList.splice(0,20);!e||e.length<=0||_.forEach(e,e=>{let t=_.find(A.getCache().scanDisplayResultList,{mac:e.mac});t?(t.rssi=e.rssi,"(unknown)"===t.name&&(t.name=e.name)):A.getCache().scanDisplayResultList.push(e)})}),500),setInterval((function(){let e=A.getCache().notifyResultList.splice(0,20);if(!e||e.length<=0)return;let t=A.getCache().notifyDisplayResultList.length;A.getCache().notifyDisplayResultList.splice(t,e.length,...e)}),500)},getGlobalVue:Fe,setObjProperty:xe,message:function(e,t=o.INFO){Oe.$message({message:e,type:t,showClose:!0})}};Ve.createVue("app"),Vue.nextTick((function(){hljs.initHighlightingOnLoad()}))}]);