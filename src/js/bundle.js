!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var s={genModuleLogger:function(e){return{debug:console.log.bind(this,`[${e}]`),info:console.log.bind(this,`[${e}]`),warn:console.log.bind(this,`[${e}]`),error:console.log.bind(this,`[${e}]`)}}};var i={BROADCASTS:"BROADCASTS",READ:"READ",WRITE_NO_RES:"WRITE NO RES",WRITE:"WRITE",NOTIFY:"NOTIFY",INDICATE:"INDICATE",AUTHEN:"AUTHEN",EXTENDED:"EXTENDED"},r={AC:"ac",AP:"ap"},a={ON:"on",OFF:"off"},o={INFO:"info",SUCCESS:"success",WARNING:"warning",ERROR:"error"},c={HEX:"hex",TEXT:"text"},l={SCAN:"scan",CONNECT:"connect",READ:"read",WRITE:"write",DISCONNECT:"disconnect"},u={CURL:"curl",NODEJS:"nodejs"},p={PUBLIC:"public",RANDOM:"random"};var d={http:{requestTimeout:1e3}};let f={http:{requestTimeout:5e3}};"production"===window.ENV&&(f=d);var h=f;var C={encode:function(e){return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g,(function(e,t){return String.fromCharCode("0x"+t)})))},decode:function(e){return decodeURIComponent(atob(e).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""))}};let S={devConf:{controlStyle:r.AP,serverURI:"http://192.168.0.38",baseURI:"http://192.168.0.38",acDevKey:"cassia",acDevSecret:"cassia",mac:"",filter_name:[],filter_mac:[],filter_rssi:-75,chip:0,access_token:""},devConfDisplayVars:{scanFilterNamesInputVisible:!1,scanFilterNamesInputValue:"",scanFilterMacsInputVisible:!1,scanFilterMacsInputValue:"",apiScanFilterNamesInputVisible:!1,apiScanFilterNamesInputValue:"",apiScanFilterMacsInputVisible:!1,apiScanFilterMacsInputValue:"",isScanning:!1,isNotifyOn:!1,isApiScanResultDisplayOn:!0,isApiScanning:!1,apiOutputDisplayCount:20,activeMenuItem:"scanListMenuItem",activeApiTabName:"scan",activeApiOutputTabName:"output",rssiChartStopped:!1,rssiChartSwitch:!1,rssiChartPeriod:60,rssiChartDataSpan:2e3,rssiChartDataCount:30,apiDebuggerParams:{[l.SCAN]:{chip:0,filter_name:[],filter_mac:[],filter_rssi:-65},[l.CONNECT]:{chip:0,deviceMac:"",addrType:p.PUBLIC},[l.READ]:{deviceMac:"",handle:""},[l.WRITE]:{deviceMac:"",handle:"",value:"",noresponse:!1},[l.DISCONNECT]:{deviceMac:""}}}},g={scanDisplayFilterContent:"",notifyDisplayFilterContent:"",isApiDebuggerLoading:!1,isNotifyLoading:!1,devicesConnectLoading:{},apiDebuggerResult:{[l.SCAN]:{sse:null,resultList:[{time:1582882186095,data:'{"name":"(unknown)","evtType":3,"rssi":-80,"adData":"1EFF06000109200262A12A0E18F1516C3D7DABD42556C51B45E9094EB88D2B","bdaddrs":[{"bdaddr":"76:95:9B:89:BB:A5","bdaddrType":"random"}]}'}],displayResultList:[],code:{[u.CURL]:"",[u.NODEJS]:""}},[l.CONNECT]:{resultList:[],code:{[u.CURL]:"",[u.NODEJS]:""}},[l.READ]:{resultList:[],code:{[u.CURL]:"",[u.NODEJS]:""}},[l.WRITE]:{resultList:[],code:{[u.CURL]:"",[u.NODEJS]:""}},[l.DISCONNECT]:{resultList:[],code:{[u.CURL]:"",[u.NODEJS]:""}}},scanResultList:[],notifyDisplayResultList:[],scanDisplayResultList:[],scanDevicesRssiHistory:{},connectedList:[],devicesServiceList:{},notifyResultList:[],notifyDisplayResultList:[]};function y(e,t){window.localStorage.setItem(e,t)}function A(e){return window.localStorage.getItem(e)}function D(e){let t=e.serverURI;return e.controlStyle===r.AC&&(t+="/api"),t}var v={save:y,get:A,saveDevConf:function(e){return e.controlStyle===r.AC?function(e){return e.baseURI=D(e),new Promise((function(t,n){U.getAccessToken(e.baseURI,e.acDevKey,e.acDevSecret).then((function(n){e.access_token=n.access_token,S.devConf=e,y("storageKey",JSON.stringify(S)),t()})).catch((function(e){n(e)}))}))}(e):function(e){return e.baseURI=D(e),S.devConf=e,y("storageKey",JSON.stringify(S)),Promise.resolve()}(e)},getDevConf:function(){return S.devConf},storage:S,cache:g,loadStorage:function(){S=JSON.parse(A("storageKey"))||S},getCache:function(){return g},getStorage:function(){return S},getDevConfDisplayVars:function(){return S.devConfDisplayVars},listAddOrUpdate:function(e,t,n){let s=_.find(e,t);s?_.forEach(n,(e,t)=>{s[t]=e}):e.push(n)}};const m=s.genModuleLogger("api");function R(e){let t=[];return _.forEach(e,(e,n)=>{_.isArray(e)&&(e=e.join(",")),t.push(`${n}=${e}`)}),t.join("&")}function E(e,t){let n={};return _.forEach(e,(e,s)=>{_.includes(t,s)&&function(e){return null!=e&&(!_.isArray(e)||0!==e.length)}(e)&&(n[s]=e)}),e.controlStyle===r.AC&&(n.mac=e.mac,n.access_token=e.access_token),n}function I(e){}function N(e){m.error("scan sse error:",e)}function T(e){m.info("connect status sse message:",e)}function $(e){m.error("connect status sse error:",e)}function L(e){m.info("notify sse message:",e)}function O(e){m.error("notify sse error:",e)}function B(e){const t=E(e,["chip","filter_mac","filter_name","filter_rssi"]);return t.active=1,t.event=1,function(e,t){return`${e}/gap/nodes?${R(t)}`}(e.baseURI,t)}function b(e){const t=E(e,[]);return function(e,t){return`${e}/management/nodes/connection-state?${R(t)}`}(e.baseURI,t)}function P(e,t,n){return function(e,t,n){let s=new EventSource(e);return s.onmessage=t||I,s.onerror=n||N,m.info("open scan sse:",e),s}(B(e),t,n)}axios.defaults.headers["Content-Type"]="application/json";var U={getAccessToken:function(e,t,n){const s=`${e}/oauth2/token`,i=axios.create({timeout:h.http.requestTimeout,headers:{Authorization:"Basic "+C.encode(`${t}:${n}`)}});return new Promise((e,t)=>{i.post(s,{grant_type:"client_credentials"}).then((function(t){m.info("get access token success:",t),e(t.data)})).catch((function(e){m.error("get access token error:",e),t(e)}))})},startScanByDevConf:P,startNotifyByDevConf:function(e,t,n){const s=E(e,[]);return s.event=1,function(e,t,n,s){const i=`${e}/gatt/nodes?${R(t)}`;let r=new EventSource(i);return r.onmessage=n||L,r.onerror=s||O,m.info("open notify sse:",i),r}(e.baseURI,s,t,n)},connectByDevConf:function(e,t,n,s=0){const i=E(e,[]),r=v.getCache().scanDisplayResultList;if(!n){const e=_.find(r,{mac:t});if(!e)return Promise.reject("can not get addr type");n=e.bdaddrType}return 0!==s&&1!==s||(i.chip=s),function(e,t,n,s){const i=`${e}/gap/nodes/${n}/connection/?${R(t)}`;return new Promise((e,t)=>{axios.post(i,{timeout:h.http.requestTimeout,type:s}).then((function(t){m.info("connect device success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("connect device error:",n),t(n)}))})}(e.baseURI,i,t,n)},disconnectByDevConf:function(e,t){const n=E(e,[]);return function(e,t,n){const s=`${e}/gap/nodes/${n}/connection/?${R(t)}`;return new Promise((e,t)=>{axios.delete(s).then((function(t){m.info("disconnect device success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("disconnect device error:",n),t(n)}))})}(e.baseURI,n,t)},getConnectedListByDevConf:function(e){const t=E(e,[]);return function(e,t){const n=`${e}/gap/nodes?${R(t)}&connection_state=connected`;return new Promise((e,t)=>{axios.get(n).then((function(t){m.info("get connected list success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("get connected list error:",n),t(n)}))})}(e.baseURI,t)},getDeviceServiceListByDevConf:function(e,t){const n=E(e,[]);return function(e,t,n){const s=`${e}/gatt/nodes/${n}/services/characteristics/descriptors?${R(t)}`;return new Promise((e,t)=>{axios.get(s).then((function(t){m.info("get device service list success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("get device service list error:",n),t(n)}))})}(e.baseURI,n,t)},readByHandleByDevConf:function(e,t,n){const s=E(e,[]);return function(e,t,n,s){const i=`${e}/gatt/nodes/${n}/handle/${s}/value?${R(t)}`;return new Promise((e,t)=>{axios.get(i).then((function(t){m.info("read handle success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("read handle error:",n),t(n)}))})}(e.baseURI,s,t,n)},writeByHandleByDevConf:function(e,t,n,s,i){const r=E(e,[]);return function(e,t,n,s,i,r=!1){let a=`${e}/gatt/nodes/${n}/handle/${s}/value/${i}?${R(t)}`;return r&&(a+="&noresponse=1"),new Promise((e,t)=>{axios.get(a).then((function(t){m.info("write handle success:",t),e(t.data)})).catch((function(e){let n=e.response?e.response.data:e;m.error("write handle error:",n),t(n)}))})}(e.baseURI,r,t,n,s,i)},getScanUrlByDevConf:B,openConnectStatusSseByDevConf:function(e,t,n){return function(e,t,n){let s=new EventSource(e);return s.onmessage=t||T,s.onerror=n||$,m.info("connect status sse:",e),s}(b(e),t,n)},getConnectUrlByDevConf:function(e,t,n){const s=E(e,[]);return 0!==n&&1!==n||(s.chip=n),function(e,t,n){return`${e}/gap/nodes/${t}/connection?${R(n)}`}(e.baseURI,t,s)},getReadUrlByDevConf:function(e,t,n){const s=E(e,[]);return function(e,t,n,s){return`${e}/gatt/nodes/${t}/handle/${n}/value?${R(s)}`}(e.baseURI,t,n,s)},getWriteUrlByDevConf:function(e,t,n,s,i){const r=E(e,[]);return i&&(r.noresponse=1),function(e,t,n,s,i){return`${e}/gatt/nodes/${t}/handle/${n}/value/${s}?${R(i)}`}(e.baseURI,t,n,s,r)},getDisconnectUrlByDevConf:function(e,t){const n=E(e,[]);return function(e,t,n){return`${e}/gap/nodes/${t}/connection?${R(n)}`}(e.baseURI,t,n)},startScanByUserParams:function(e,t,n,s,i,r,a){const o=_.cloneDeep(e);return o.chip=t,o.filter_mac=n,o.filter_name=s,o.filter_rssi=i,P(o,r,a)}};const w=s.genModuleLogger("scan");let F=null;function M(e){const t=v.getCache(),n=v.getStorage(),s=JSON.parse(e.data),i=s.bdaddrs[0],r=i.bdaddr,a=i.bdaddrType;let o=_.find(t.scanResultList,{mac:r});o?("(unknown)"!==s.name&&(o.name=s.name),o.rssi=s.rssi):t.scanResultList.push({mac:r,name:s.name,adData:s.adData,bdaddrType:a,rssi:s.rssi}),n.devConfDisplayVars.rssiChartSwitch&&(t.scanDevicesRssiHistory[r]?t.scanDevicesRssiHistory[r].push({time:Date.now(),rssi:s.rssi}):De.setObjProperty(t.scanDevicesRssiHistory,r,[{time:Date.now(),rssi:s.rssi}]))}function V(e){w.error("scan sse error:",e),De.notify(`停止扫描，扫描SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),F.close(),F=null}var H={startScan:function(e){return F||(F=U.startScanByDevConf(e,M,V),F)},stopScan:function(){F&&(F.close(),F=null),De.notify("停止扫描成功","操作成功",o.SUCCESS)}};const x={1800:"Generic Access",1811:"Alert Notification Service",1815:"Automation IO","180F":"Battery Service","183B":"Binary Sensor",1810:"Blood Pressure","181B":"Body Composition","181E":"Bond Management Service","181F":"Continuous Glucose Monitoring",1805:"Current Time Service",1818:"Cycling Power",1816:"Cycling Speed and Cadence","180A":"Device Information","183C":"Emergency Configuration","181A":"Environmental Sensing",1826:"Fitness Machine",1801:"Generic Attribute",1808:"Glucose",1809:"Health Thermometer","180D":"Heart Rate",1823:"HTTP Proxy",1812:"Human Interface Device",1802:"Immediate Alert",1821:"Indoor Positioning","183A":"Insulin Delivery",1820:"Internet Protocol Support Service",1803:"Link Loss",1819:"Location and Navigation",1827:"Mesh Provisioning Service",1828:"Mesh Proxy Service",1807:"Next DST Change Service",1825:"Object Transfer Service","180E":"Phone Alert Status Service",1822:"Pulse Oximeter Service",1829:"Reconnection Configuration",1806:"Reference Time Update Service",1814:"Running Speed and Cadence",1813:"Scan Parameters",1824:"Transport Discovery",1804:"User Data","181D":"Weight Scale"};var j={getNameByUuid:function(e){let t=parseInt(e.split("-")[0],16).toString(16).toUpperCase();return x[t]||"Unknown Service"}};const k={"2A7E":"Aerobic Heart Rate Lower Limit","2A84":"Aerobic Heart Rate Upper Limit","2A7F":"Aerobic Threshold","2A80":"Age","2A5A":"Aggregate","2A43":"Alert Category ID","2A42":"Alert Category ID Bit Mask","2A06":"Alert Level","2A44":"Alert Notification Control Point","2A3F":"Alert Status","2AB3":"Altitude","2A81":"Anaerobic Heart Rate Lower Limit","2A82":"Anaerobic Heart Rate Upper Limit","2A83":"Anaerobic Threshold","2A58":"Analog","2A59":"Analog Output","2A73":"Apparent Wind Direction","2A72":"Apparent Wind Speed","2A01":"Appearance","2AA3":"Barometric Pressure Trend","2A19":"Battery Level","2A1B":"Battery Level State","2A1A":"Battery Power State","2A49":"Blood Pressure Feature","2A35":"Blood Pressure Measurement","2A9B":"Body Composition Feature","2A9C":"Body Composition Measurement","2A38":"Body Sensor Location","2AA4":"Bond Management Control Point","2AA5":"Bond Management Features","2A22":"Boot Keyboard Input Report","2A32":"Boot Keyboard Output Report","2A33":"Boot Mouse Input Report","2B2B":"BSS Control Point","2B2C":"BSS Response","2AA8":"CGM Feature","2AA7":"CGM Measurement","2AAB":"CGM Session Run Time","2AAA":"CGM Session Start Time","2AAC":"CGM Specific Ops Control Point","2AA9":"CGM Status","2B29":"Client Supported Features","2ACE":"Cross Trainer Data","2A5C":"CSC Feature","2A5B":"CSC Measurement","2A2B":"Current Time","2A66":"Cycling Power Control Point","2A65":"Cycling Power Feature","2A63":"Cycling Power Measurement","2A64":"Cycling Power Vector","2A99":"Database Change Increment","2B2A":"Database Hash","2A85":"Date of Birth","2A86":"Date of Threshold Assessment","2A08":"Date Time","2AED":"Date UTC","2A0A":"Day Date Time","2A09":"Day of Week","2A7D":"Descriptor Value Changed","2A7B":"Dew Point","2A56":"Digital","2A57":"Digital Output","2A0D":"DST Offset","2A6C":"Elevation","2A87":"Email Address","2B2D":"Emergency ID","2B2E":"Emergency Text","2A0B":"Exact Time 100","2A0C":"Exact Time 256","2A88":"Fat Burn Heart Rate Lower Limit","2A89":"Fat Burn Heart Rate Upper Limit","2A26":"Firmware Revision String","2A8A":"First Name","2AD9":"Fitness Machine Control Point","2ACC":"Fitness Machine Feature","2ADA":"Fitness Machine Status","2A8B":"Five Zone Heart Rate Limits","2AB2":"Floor Number","2AA6":"Central Address Resolution","2A00":"Device Name","2A04":"Peripheral Preferred Connection Parameters","2A02":"Peripheral Privacy Flag","2A03":"Reconnection Address","2A05":"Service Changed","2A8C":"Gender","2A51":"Glucose Feature","2A18":"Glucose Measurement","2A34":"Glucose Measurement Context","2A74":"Gust Factor","2A27":"Hardware Revision String","2A39":"Heart Rate Control Point","2A8D":"Heart Rate Max","2A37":"Heart Rate Measurement","2A7A":"Heat Index","2A8E":"Height","2A4C":"HID Control Point","2A4A":"HID Information","2A8F":"Hip Circumference","2ABA":"HTTP Control Point","2AB9":"HTTP Entity Body","2AB7":"HTTP Headers","2AB8":"HTTP Status Code","2ABB":"HTTPS Security","2A6F":"Humidity","2B22":"IDD Annunciation Status","2B25":"IDD Command Control Point","2B26":"IDD Command Data","2B23":"IDD Features","2B28":"IDD History Data","2B27":"IDD Record Access Control Point","2B21":"IDD Status","2B20":"IDD Status Changed","2B24":"IDD Status Reader Control Point","2A2A":"IEEE 11073-20601 Regulatory Certification Data List","2AD2":"Indoor Bike Data","2AAD":"Indoor Positioning Configuration","2A36":"Intermediate Cuff Pressure","2A1E":"Intermediate Temperature","2A77":"Irradiance","2AA2":"Language","2A90":"Last Name","2AAE":"Latitude","2A6B":"LN Control Point","2A6A":"LN Feature","2AB1":"Local East Coordinate","2AB0":"Local North Coordinate","2A0F":"Local Time Information","2A67":"Location and Speed Characteristic","2AB5":"Location Name","2AAF":"Longitude","2A2C":"Magnetic Declination","2AA0":"Magnetic Flux Density – 2D","2AA1":"Magnetic Flux Density – 3D","2A29":"Manufacturer Name String","2A91":"Maximum Recommended Heart Rate","2A21":"Measurement Interval","2A24":"Model Number String","2A68":"Navigation","2A3E":"Network Availability","2A46":"New Alert","2AC5":"Object Action Control Point","2AC8":"Object Changed","2AC1":"Object First-Created","2AC3":"Object ID","2AC2":"Object Last-Modified","2AC6":"Object List Control Point","2AC7":"Object List Filter","2ABE":"Object Name","2AC4":"Object Properties","2AC0":"Object Size","2ABF":"Object Type","2ABD":"OTS Feature","2A5F":"PLX Continuous Measurement Characteristic","2A60":"PLX Features","2A5E":"PLX Spot-Check Measurement","2A50":"PnP ID","2A75":"Pollen Concentration","2A2F":"Position 2D","2A30":"Position 3D","2A69":"Position Quality","2A6D":"Pressure","2A4E":"Protocol Mode","2A62":"Pulse Oximetry Control Point","2A78":"Rainfall","2B1D":"RC Feature","2B1E":"RC Settings","2B1F":"Reconnection Configuration Control Point","2A52":"Record Access Control Point","2A14":"Reference Time Information","2B37":"Registered User Characteristic","2A3A":"Removable","2A4D":"Report","2A4B":"Report Map","2AC9":"Resolvable Private Address Only","2A92":"Resting Heart Rate","2A40":"Ringer Control point","2A41":"Ringer Setting","2AD1":"Rower Data","2A54":"RSC Feature","2A53":"RSC Measurement","2A55":"SC Control Point","2A4F":"Scan Interval Window","2A31":"Scan Refresh","2A3C":"Scientific Temperature Celsius","2A10":"Secondary Time Zone","2A5D":"Sensor Location","2A25":"Serial Number String","2B3A":"Server Supported Features","2A3B":"Service Required","2A28":"Software Revision String","2A93":"Sport Type for Aerobic and Anaerobic Thresholds","2AD0":"Stair Climber Data","2ACF":"Step Climber Data","2A3D":"String","2AD7":"Supported Heart Rate Range","2AD5":"Supported Inclination Range","2A47":"Supported New Alert Category","2AD8":"Supported Power Range","2AD6":"Supported Resistance Level Range","2AD4":"Supported Speed Range","2A48":"Supported Unread Alert Category","2A23":"System ID","2ABC":"TDS Control Point","2A6E":"Temperature","2A1F":"Temperature Celsius","2A20":"Temperature Fahrenheit","2A1C":"Temperature Measurement","2A1D":"Temperature Type","2A94":"Three Zone Heart Rate Limits","2A12":"Time Accuracy","2A15":"Time Broadcast","2A13":"Time Source","2A16":"Time Update Control Point","2A17":"Time Update State","2A11":"Time with DST","2A0E":"Time Zone","2AD3":"Training Status","2ACD":"Treadmill Data","2A71":"True Wind Direction","2A70":"True Wind Speed","2A95":"Two Zone Heart Rate Limit","2A07":"Tx Power Level","2AB4":"Uncertainty","2A45":"Unread Alert Status","2AB6":"URI","2A9F":"User Control Point","2A9A":"User Index","2A76":"UV Index","2A96":"VO2 Max","2A97":"Waist Circumference","2A98":"Weight","2A9D":"Weight Measurement","2A9E":"Weight Scale Feature","2A79":"Wind Chill"};var G={getNameByUuid:function(e){let t=parseInt(e.split("-")[0],16).toString(16).toUpperCase();return k[t]||"Unknown Characteristics"}};function J(e){return _.forEach(e,e=>{e.name=j.getNameByUuid(e.uuid),_.forEach(e.characteristics,e=>{e.name=G.getNameByUuid(e.uuid),e.propertiesStr=function(e){const t=[i.BROADCASTS,i.READ,i.WRITE_NO_RES,i.WRITE,i.NOTIFY,i.INDICATE,i.AUTHEN,i.EXTENDED];let n=[];return _.forEach(t,(t,s)=>{1<<s&e&&n.push(t)}),n}(e.properties),e.readValue="",e.writeValue="",e.notifyStatus=a.OFF,e.writeValueType=c.HEX})}),e}var W={getCharByHandle:function(e,t){const n=v.getCache().devicesServiceList[e];for(let e=0;e<n.length;e++){let s=n[e];s.characteristics=s.characteristics||[];for(let e=0;e<s.characteristics.length;e++){let n=s.characteristics[e];if(n.handle===t)return n}}return null},getDeviceServiceList:function(e){const t=v.getDevConf(),n=v.getCache();U.getDeviceServiceListByDevConf(t,e).then(t=>{De.setObjProperty(n.devicesServiceList,e,J(t))})}};const q=s.genModuleLogger("operation"),X={[i.READ]:function(e,t,n,s){const i=v.getDevConf(),r=W.getCharByHandle(t,n);if(!r)return void De.notify(`读取设备 ${t} handle ${n} 失败: 未找到对应的characteristic`,"操作失败",o.ERROR);U.readByHandleByDevConf(i,t,n).then(e=>{r.readValue=e.value,De.notify(`读取设备 ${t} handle ${n} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{De.notify(`读取设备 ${t} handle ${n} 失败: ${e}`,"操作失败",o.ERROR)})},[i.NOTIFY]:function(e,t,n,s){const i=v.getDevConf(),r=W.getCharByHandle(t,n);if(!r)return void De.notify(`下发设备通知 ${t} handle ${n} 失败: 未找到对应的characteristic`,"操作失败",o.ERROR);let c=s===a.ON?"0000":"0100";U.writeByHandleByDevConf(i,t,n,c,!1).then(()=>{r.notifyStatus===a.ON?r.notifyStatus=a.OFF:r.notifyStatus===a.OFF&&(r.notifyStatus=a.ON),De.notify(`下发设备通知 ${t} handle ${n} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{De.notify(`下发设备通知 ${t} handle ${n} 失败: ${e}`,"操作失败",o.ERROR)})},[i.WRITE_NO_RES]:function(e,t,n,s){const i=v.getDevConf();s=Z(s);const r=W.getCharByHandle(t,n);if(!r)return void De.notify(`写入设备 ${t} handle ${n} value ${s} 失败: 未找到对应的characteristic`,"操作失败",o.ERROR);s=r.writeValueType===c.TEXT?K(s):Z(s);U.writeByHandleByDevConf(i,t,n,s,!0).then(e=>{De.notify(`写入设备 ${t} handle ${n} value ${s} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{De.notify(`写入设备 ${t} handle ${n} value ${s} 失败: ${e}`,"操作失败",o.ERROR)})},[i.WRITE]:function(e,t,n,s){const i=v.getDevConf(),r=W.getCharByHandle(t,n);if(!r)return void De.notify(`写入设备 ${t} handle ${n} value ${s} 失败: 未找到对应的characteristic`,"操作失败",o.ERROR);s=r.writeValueType===c.TEXT?K(s):Z(s);U.writeByHandleByDevConf(i,t,n,s,!1).then(e=>{De.notify(`写入设备 ${t} handle ${n} value ${s} 成功`,"操作成功",o.SUCCESS)}).catch(e=>{De.notify(`写入设备 ${t} handle ${n} value ${s} 失败: ${e}`,"操作失败",o.ERROR)})}};function K(e){for(var t=e.length,n=0,s=new Array,i=0;i<t;){var r=e.codePointAt(i);r<128?(s[n++]=r,i++):r>127&&r<2048?(s[n++]=r>>6|192,s[n++]=63&r|128,i++):r>2047&&r<65536?(s[n++]=r>>12|224,s[n++]=r>>6&63|128,s[n++]=63&r|128,i++):(s[n++]=r>>18|240,s[n++]=r>>12&63|128,s[n++]=r>>6&63|128,s[n++]=63&r|128,i+=2)}return(s=_.map(s,e=>e.toString("16"))).join("")}function Z(e){return e.trim().split(/\s+/).join("")}function z(e,t,n,s){const i=`no support operation: ${e}, ${t}, ${n}`;return q.warn(i),Promise.reject(i)}var Y={dispatch:function(e,t,n,s){return(X[e]||z)(e,t,n,s)}};const Q={[l.SCAN]:{[u.CURL]:function(e){const t=v.getDevConf();let n=_.cloneDeep(t);return _.forEach(e,(e,t)=>{null!=e&&(n[t]=e)}),`\n  curl -H "Accept: text/event-stream" '${U.getScanUrlByDevConf(n)}'\n  `},[u.NODEJS]:function(e){const t=v.getDevConf();let n=_.cloneDeep(t);return _.forEach(e,(e,t)=>{null!=e&&(n[t]=e)}),`\n  const EventSource = require('eventsource');\n\n  const url = '${U.getScanUrlByDevConf(n)}';\n\n  const sse = new EventSource(url);\n\n  sse.onerror = function(error) {\n    console.log('open scan sse failed:', error);\n  };\n\n  sse.onmessage = function(message) {\n    console.log('recevied scan sse message:', message);\n  };\n  `}},[l.CONNECT]:{[u.CURL]:function(e){const t=v.getDevConf();return`\n  curl --location --request POST '${U.getConnectUrlByDevConf(t,e.deviceMac,e.chip)}'   --header 'Content-Type: application/json'   --data-raw '{\n    "timeout": 5000,\n    "type": "${e.addrType}"\n  }'\n  `},[u.NODEJS]:function(e){const t=v.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'POST',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac,e.chip)}',\n    'headers': {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({"timeout":5000,"type":"${e.addrType}"})\n\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[l.READ]:{[u.CURL]:function(e){const t=v.getDevConf();return`\n  curl --location --request GET '${U.getReadUrlByDevConf(t,e.deviceMac,e.handle)}'\n  `},[u.NODEJS]:function(e){const t=v.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'GET',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[l.WRITE]:{[u.CURL]:function(e){const t=v.getDevConf();return`\n  curl --location --request GET '${U.getWriteUrlByDevConf(t,e.deviceMac,e.handle,e.value,e.noresponse)}'\n  `},[u.NODEJS]:function(e){const t=v.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'GET',\n    'url': '${U.getWriteUrlByDevConf(t,e.deviceMac,e.handle,e.value,e.noresponse)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}},[l.DISCONNECT]:{[u.CURL]:function(e){const t=v.getDevConf();return`\n  curl --location --request DELETE '${U.getDisconnectUrlByDevConf(t,e.deviceMac)}'\n  `},[u.NODEJS]:function(e){const t=v.getDevConf();return`\n  var request = require('request');\n  var options = {\n    'method': 'DELETE',\n    'url': '${U.getConnectUrlByDevConf(t,e.deviceMac)}',\n    'headers': {\n    }\n  };\n  request(options, function (error, response) { \n    if (error) throw new Error(error);\n    console.log(response.body);\n  });\n  `}}};var ee={genCode:function(e,t,n){return Q[e][t](n)}};const te=s.genModuleLogger("notify");let ne=null;function se(e){JSON.parse(e.data);te.info("notify sse message:",e),v.getCache().notifyResultList.push({time:Date.now(),data:e.data})}function ie(e){te.error("notify sse error:",e),De.notify(`关闭设备通知SSE，SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),ne.close(),ne=null}var re={startNotify:function(){if(ne)return ne;const e=v.getDevConf();ne=U.startNotifyByDevConf(e,se,ie)},stopNotify:function(){ne&&(ne.close(),ne=null)}};const ae=s.genModuleLogger("connect");let oe=null;function ce(e){const t=v.getCache(),n=JSON.parse(e.data);"connected"===n.connectionState?(v.listAddOrUpdate(v.getCache().connectedList,{mac:n.handle},{mac:n.handle,chip:n.chipId}),De.notify(`chip${n.chipId} 连接${n.handle}成功`,"操作成功",o.SUCCESS)):"disconnected"===n.connectionState&&(_.remove(t.connectedList,{mac:n.handle}),De.notify(`设备 ${n.handle} 断开连接`,"通知提示",o.WARNING))}function le(e){ae.error("connect status sse error:",e),De.notify(`关闭连接状态SSE，SSE异常: ${e.message||JSON.stringify(e)}`,"服务异常",o.ERROR),oe.close(),oe=null}function ue(){const e=v.getDevConf();oe=U.openConnectStatusSseByDevConf(e,ce,le)}function pe(){oe&&(oe.close(),oe=null)}var de={loadConnectedList:function(){const e=v.getDevConf();U.getConnectedListByDevConf(e).then(e=>{const t=v.getCache();_.forEach(e.nodes,e=>{let n=_.find(t.connectedList,{mac:e.id});n?n.chip=e.chipId:t.connectedList.push({name:e.name||"(unknown)",mac:e.id,bdaddrType:e.type,chip:e.chipId})})})},openConnectStatusSse:ue,closeConnectStatusSse:pe,reopenConnectStatusSse:function(){pe(),ue()}};const fe=s.genModuleLogger("vue");let he=null;function Ce(e,t="",n=o.INFO,s=!0){const i={title:t,message:e,type:n};s||(i.duration=0),he.$notify(i)}function Se(){let e=echarts.init(document.getElementById("rssiChart")),t=function(){let e=[];const t=v.getDevConfDisplayVars();t.rssiChartDataCount=1e3*t.rssiChartPeriod/t.rssiChartDataSpan;for(let n=0;n<t.rssiChartDataCount;n++)e.push((n*t.rssiChartDataSpan).toString());return e}();return e.setOption({title:{show:!1},grid:{right:"20%"},legend:{type:"scroll",orient:"vertical",x:"right",y:"center"},xAxis:{type:"category",data:t,axisLabel:{show:!0,rotate:45,interval:0,formatter:function(e,t){return""}}},yAxis:{type:"value",min:-100,max:-10,splitNumber:10,inverse:!0},series:[]}),e.resize(),e}function ge(e){return{scanTabsClick(e){this.$refs.refScanDisplayResultGrid.updateData(),this.$refs.refScanDisplayResultGrid.refreshScroll()},scanDisplayResultClear(){this.cache.scanDisplayResultList.splice(0)},notifyDisplayResultClear(){this.cache.notifyDisplayResultList.splice(0)},scanDisplayResultExport(){this.$refs.refScanDisplayResultGrid.exportData({type:"csv"})},notifyDisplayResultExport(){this.$refs.refNotifyDisplayResultGrid.exportData({type:"csv"})},loadNotifyResult(){this.cache.isNotifyLoading=!0;let e=this.cache.notifyResultList.splice(0,5),t=_.map(e,e=>`${new Date(e.time).toISOString()}: ${e.data}`);if(0!==e.length){let e=this.cache.notifyDisplayResultList.length;this.cache.notifyDisplayResultList.splice(e,t.length,...t),this.cache.isNotifyLoading=!1}else setTimeout((function(e){e.cache.isNotifyLoading=!1,e.loadNotifyResult()}),500,this)},loadApiDebuggerResult(){if(this.store.devConfDisplayVars.activeApiTabName===l.SCAN){const e=5;this.cache.isApiDebuggerLoading=!0;let t=this.cache.apiDebuggerResult[l.SCAN].resultList.splice(0,e),n=_.map(t,e=>`${new Date(e.time).toISOString()}: ${e.data}`);if(0!==t.length){let e=this.cache.apiDebuggerResult[l.SCAN].displayResultList.length;this.cache.apiDebuggerResult[l.SCAN].displayResultList.splice(e,n.length,...n),this.cache.isApiDebuggerLoading=!1}else setTimeout((function(e){e.cache.isApiDebuggerLoading=!1,e.loadApiDebuggerResult()}),500,this)}},startDebugApi(){const e=this.store.devConfDisplayVars.activeApiTabName,t=this.store.devConfDisplayVars.apiDebuggerParams[e],n=this.cache.apiDebuggerResult[e];e===l.SCAN?(n.sse=U.startScanByUserParams(this.store.devConf,t.chip,t.filter_mac,t.filter_name,t.filter_rssi,e=>{this.store.devConfDisplayVars.isApiScanResultDisplayOn&&this.cache.apiDebuggerResult[l.SCAN].resultList.push({time:Date.now(),data:e.data.trim()})}),setTimeout(()=>{n.sse.close(),n.sse=null,this.store.devConfDisplayVars.isApiScanning=!1,Ce("已自动停止API扫描","操作成功",o.SUCCESS)},1e4),this.store.devConfDisplayVars.isApiScanning=!0,this.store.devConfDisplayVars.activeApiOutputTabName="output",Ce("调试API扫描自动执行10秒，正常的SSE会一直收到数据","操作成功",o.SUCCESS)):e===l.CONNECT?U.connectByDevConf(this.store.devConf,t.deviceMac,t.addrType).then(()=>{n.resultList.push(`${(new Date).toISOString()}: 连接设备成功, ${JSON.stringify(t)}`)}).catch(e=>{Ce(`连接设备 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 连接设备失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===l.READ?U.readByHandleByDevConf(this.store.devConf,t.deviceMac,t.handle).then(()=>{Ce(`读取数据 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 读取数据成功, ${JSON.stringify(t)}`)}).catch(e=>{Ce(`读取数据 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 读取数据失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===l.WRITE?U.writeByHandleByDevConf(this.store.devConf,t.deviceMac,t.handle,t.value,t.noresponse).then(()=>{Ce(`写入数据 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 写入数据成功, ${JSON.stringify(t)}`)}).catch(e=>{Ce(`写入数据 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 写入数据失败, ${JSON.stringify({apiParams:t,ex:e})}`)}):e===l.DISCONNECT&&U.disconnectByDevConf(this.store.devConf,t.deviceMac).then(()=>{Ce(`断连设备 ${deviceMac} 成功`,"操作成功",o.SUCCESS),n.resultList.push(`${(new Date).toISOString()}: 断连设备成功, ${JSON.stringify(t)}`)}).catch(e=>{Ce(`断连设备 ${t.deviceMac} 失败: ${e}`,"操作失败",o.ERROR),n.resultList.push(`${(new Date).toISOString()}: 断连设备失败, ${JSON.stringify({apiParams:t,ex:e})}`)})},openApiOutputDisplay(){this.store.devConfDisplayVars.isApiScanResultDisplayOn=!0,Ce("开启API结果成功","操作成功",o.SUCCESS)},closeApiOutputDisplay(){this.store.devConfDisplayVars.isApiScanResultDisplayOn=!1,Ce("关闭API结果成功","操作成功",o.SUCCESS)},exportApiOutputDisplay(){Ce("功能待添加","操作失败",o.ERROR)},clearApiOutputDisplay(){this.store.devConfDisplayVars.activeApiTabName===l.SCAN&&this.cache.apiDebuggerResult[this.store.devConfDisplayVars.activeApiTabName].displayResultList.splice(0),this.cache.apiDebuggerResult[this.store.devConfDisplayVars.activeApiTabName].resultList.splice(0),Ce("清除API结果成功","操作成功",o.SUCCESS)},clearNotify(){this.cache.notifyResultList.splice(0),this.cache.notifyDisplayResultList.splice(0),Ce("清除Notify成功","操作成功",o.SUCCESS)},openNotify(){re.startNotify(),this.store.devConfDisplayVars.isNotifyOn=!0,Ce("开启Notify成功","操作成功",o.SUCCESS)},closeNotify(){re.stopNotify(),this.store.devConfDisplayVars.isNotifyOn=!1,Ce("关闭Notify成功","操作成功",o.SUCCESS)},stopRssiChart(){clearInterval(he.rssiChartUpdateInterval),he.rssiChartUpdateInterval=null,this.store.devConfDisplayVars.rssiChartStopped=!0},startRssiChart(){he.rssiChartUpdateInterval=function(){const e=v.getDevConfDisplayVars();return setInterval((function(){if(!he.rssiChart)return fe.warn("no rssi chart");fe.info("update rssi chart by interval");let t=Date.now(),n=function(e,t){let n=[];const s=v.getDevConfDisplayVars();if(s.rssiChartDataCount=1e3*s.rssiChartPeriod/s.rssiChartDataSpan,_.keys(v.getCache().scanDevicesRssiHistory).length>5)return he.destoryRssiChart(),Ce("当前扫描设备数量超过5个，已自动关闭rssi图表，请配置合适的扫描过滤参数，防止卡顿","操作失败",o.ERROR);return _.forEach(v.getCache().scanDevicesRssiHistory,(i,r)=>{let a=new Array(s.rssiChartDataCount);_.remove(i,t=>t.time<e),_.forEach(i,n=>{if(n.time>=e&&n.time<t){let t=parseInt((n.time-e)/s.rssiChartDataSpan);a[t]=n.rssi}}),n.push({name:r,type:"line",data:a})}),n}(t-1e3*e.rssiChartPeriod,t);he.rssiChart.setOption({series:n}),he.rssiChart.resize()}),e.rssiChartDataSpan)}(),this.store.devConfDisplayVars.rssiChartStopped=!1},destoryRssiChart(){clearInterval(he.rssiChartUpdateInterval),he.rssiChart=null,he.rssiChartUpdateInterval=null,this.store.devConfDisplayVars.rssiChartSwitch=!1},destoryAndCreateRssiChart(){this.store.devConfDisplayVars.isScanning?(this.destoryRssiChart(),setTimeout((function(e){he.rssiChart=Se(),he.startRssiChart(),Ce("开启RSSI图表成功","操作成功",o.SUCCESS)}),100),this.store.devConfDisplayVars.rssiChartSwitch=!0):this.$confirm("此操作需要开启扫描, 是否继续?（请配置合适的扫描过滤参数，不超过5个设备，否则会自动暂停）","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(()=>{this.startScan(),this.destoryRssiChart(),setTimeout((function(e){he.rssiChart=Se(),he.startRssiChart(),Ce("开启RSSI图表成功","操作成功",o.SUCCESS)}),100),this.store.devConfDisplayVars.rssiChartSwitch=!0}).catch(()=>{})},connectedListTabRemove(e){const t=this.cache.connectedList[e].mac;this.disconnectDevice(t)},rssiChartDataSpanChange(){this.devConfDisplayVars.rssiChartSwitch&&this.destoryAndCreateRssiChart()},genCode(){let e=this.store.devConfDisplayVars.activeApiTabName;const t=this.store.devConfDisplayVars.apiDebuggerParams[e],n=this.cache.apiDebuggerResult[e];n.code[u.CURL]=ee.genCode(e,u.CURL,t),n.code[u.NODEJS]=ee.genCode(e,u.NODEJS,t),this.store.devConfDisplayVars.activeApiOutputTabName=u.CURL},menuSelect(e,t){this.store.devConfDisplayVars.activeMenuItem=e,"connectListMenuItem"===e?(de.loadConnectedList(),de.reopenConnectStatusSse()):"notifyListMenuItem"===e?this.$refs.refNotifyDisplayResultGrid.recalculate():"scanListMenuItem"===e&&(this.$refs.refScanDisplayResultGrid.recalculate(),this.$refs.refScanDisplayResultGrid.updateData())},propertyClick(e,t,n,s){Y.dispatch(e,t,n,s)},getDeviceServices(e){W.getDeviceServiceList(e)},startScan(){H.startScan(this.store.devConf),this.store.devConfDisplayVars.isScanning=!0,this.cache.scanResultList.splice(0),this.cache.scanDisplayResultList.splice(0),this.cache.scanDevicesRssiHistory={},this.store.devConfDisplayVars.activeMenuItem="scanListMenuItem",Ce("开启扫描成功","操作成功",o.SUCCESS)},stopApiScan(){},stopScan(){H.stopScan(),this.store.devConfDisplayVars.rssiChartSwitch&&this.stopRssiChart(),this.store.devConfDisplayVars.isScanning=!1},connectDevice(e,t){Ae(this.cache.devicesConnectLoading,t,!0),U.connectByDevConf(this.store.devConf,t).then(()=>{_.remove(this.cache.scanResultList,{mac:t});let n=_.remove(this.cache.scanDisplayResultList,{mac:t});this.$refs.refScanDisplayResultGrid.remove([e]),this.$refs.refScanDisplayResultGrid.refreshData(),this.$refs.refScanDisplayResultGrid.recalculate(),this.$refs.refScanDisplayResultGrid.refreshScroll(),n.length>0&&v.listAddOrUpdate(this.cache.connectedList,{mac:n[0].mac},{mac:n[0].mac,name:n[0].name,bdaddrType:n[0].bdaddrType})}).catch(e=>{Ce(`连接设备 ${t} 失败: ${e}`,"操作失败",o.ERROR)}).then(()=>{Ae(this.cache.devicesConnectLoading,t,!1)})},disconnectDevice(e){U.disconnectByDevConf(this.store.devConf,e).then(()=>{_.remove(this.cache.connectedList,{mac:e})}).catch((function(t){Ce(`设备 ${e} 断连失败: ${t}`,"操作失败",o.ERROR)}))},apiScanFilterNamesHandleClose(e){const t=this.store.devConfDisplayVars.apiDebuggerParams[l.SCAN].filter_name;t.splice(t.indexOf(e),1)},apiScanFilterNamesShowInput(){this.store.devConfDisplayVars.apiScanFilterNamesInputVisible=!0,this.$nextTick(e=>{this.$refs.apiScanFilterNamesSaveTagInput.$refs.input.focus()})},apiScanFilterNamesHandleInputConfirm(){let e=this.store.devConfDisplayVars.apiScanFilterNamesInputValue;e&&this.store.devConfDisplayVars.apiDebuggerParams[l.SCAN].filter_name.push(e),this.store.devConfDisplayVars.apiScanFilterNamesInputVisible=!1,this.store.devConfDisplayVars.apiScanFilterNamesInputValue=""},apiScanFilterMacsHandleClose(e){const t=this.store.devConfDisplayVars.apiDebuggerParams[l.SCAN].filter_mac;t.splice(t.indexOf(e),1)},apiScanFilterMacsShowInput(){this.store.devConfDisplayVars.apiScanFilterMacsInputVisible=!0,this.$nextTick(e=>{this.$refs.apiScanFilterMacsSaveTagInput.$refs.input.focus()})},apiScanFilterMacsHandleInputConfirm(){let e=this.store.devConfDisplayVars.apiScanFilterMacsInputValue;e&&this.store.devConfDisplayVars.apiDebuggerParams[l.SCAN].filter_mac.push(e),this.store.devConfDisplayVars.apiScanFilterMacsInputVisible=!1,this.store.devConfDisplayVars.apiScanFilterMacsInputValue=""},scanFilterNamesHandleClose(e){this.store.devConf.filter_name.splice(this.store.devConf.filter_name.indexOf(e),1)},scanFilterNamesShowInput(){this.store.devConfDisplayVars.scanFilterNamesInputVisible=!0,this.$nextTick(e=>{this.$refs.scanFilterNamesSaveTagInput.$refs.input.focus()})},scanFilterNamesHandleInputConfirm(){let e=this.store.devConfDisplayVars.scanFilterNamesInputValue;e&&this.store.devConf.filter_name.push(e),this.store.devConfDisplayVars.scanFilterNamesInputVisible=!1,this.store.devConfDisplayVars.scanFilterNamesInputValue=""},scanFilterMacsHandleClose(e){this.store.devConf.filter_mac.splice(this.store.devConf.filter_mac.indexOf(e),1)},scanFilterMacsShowInput(){this.store.devConfDisplayVars.scanFilterMacsInputVisible=!0,this.$nextTick(e=>{this.$refs.scanFilterMacsSaveTagInput.$refs.input.focus()})},scanFilterMacsHandleInputConfirm(){let e=this.store.devConfDisplayVars.scanFilterMacsInputValue;e&&this.store.devConf.filter_mac.push(e),this.store.devConfDisplayVars.scanFilterMacsInputVisible=!1,this.store.devConfDisplayVars.scanFilterMacsInputValue=""}}}function ye(){return he}function Ae(e,t,n){ye().$set(e,t,n)}var De={notify:Ce,createVue:function(e){Vue.directive("highlightjs",{deep:!0,bind:function(e,t){var n,s,i=e.querySelectorAll("code");for(s=0;s<i.length;s+=1)n=i[s],"string"==typeof t.value&&(n.textContent=t.value),hljs.highlightBlock(n)},componentUpdated:function(e,t){var n,s,i=e.querySelectorAll("code");for(s=0;s<i.length;s+=1)n=i[s],"string"==typeof t.value&&(n.textContent=t.value,hljs.highlightBlock(n))}}),he=new Vue({el:`#${e}`,methods:ge(),data:function(){return{store:v.getStorage(),cache:v.getCache()}},mounted(){},watch:{"cache.apiDebuggerResult.scanCodeCurl":function(e,t){document.querySelectorAll("pre code").forEach(e=>{hljs.highlightBlock(e)})},"store.devConf":{handler:function(e,t){v.saveDevConf(e)},deep:!0}},computed:{getComputedNotifyDisplayResultList(){const e=XEUtils.toString(this.cache.notifyDisplayFilterContent).trim().toLowerCase();if(e){const t=new RegExp(e,"gi"),n=["mac","name"];return this.cache.notifyDisplayResultList.filter(t=>n.some(n=>XEUtils.toString(t[n]).toLowerCase().indexOf(e)>-1)).map(e=>{const s=Object.assign({},e);return n.forEach(e=>{s[e]=XEUtils.toString(s[e]).replace(t,e=>`<span class="keyword-lighten">${e}</span>`)}),s})}return this.cache.notifyDisplayResultList},getComputedScanDisplayResultList(){const e=XEUtils.toString(this.cache.scanDisplayFilterContent).trim().toLowerCase();if(e){const t=new RegExp(e,"gi"),n=["mac","name"];return this.cache.scanDisplayResultList.filter(t=>n.some(n=>XEUtils.toString(t[n]).toLowerCase().indexOf(e)>-1)).map(e=>{const s=Object.assign({},e);return n.forEach(e=>{s[e]=XEUtils.toString(s[e]).replace(t,e=>`<span class="keyword-lighten">${e}</span>`)}),s})}return this.cache.scanDisplayResultList}}}),setInterval((function(){let e=v.getCache().scanResultList.splice(0,20);!e||e.length<=0||_.forEach(e,e=>{let t=_.find(v.getCache().scanDisplayResultList,{mac:e.mac});t?(t.rssi=e.rssi,"(unknown)"===t.name&&(t.name=e.name)):v.getCache().scanDisplayResultList.push(e)})}),500),setInterval((function(){let e=v.getCache().notifyResultList.splice(0,20);if(!e||e.length<=0)return;let t=v.getCache().notifyDisplayResultList.length;v.getCache().notifyDisplayResultList.splice(t,e.length,...e)}),500)},getGlobalVue:ye,setObjProperty:Ae,message:function(e,t=o.INFO){he.$message({message:e,type:t,showClose:!0})}};De.createVue("app"),Vue.nextTick((function(){hljs.initHighlightingOnLoad()}))}]);